<!--
indicationdetailAddForm.vm
indicationdetailEditForm.vm
indicationdetailList.vm
indicationdetailResultView.vm
responseIndicationdetailByEncounter.vm
-->
<script>




	function makeGetRequestEncounterByTypeHead() 
	{
		if (document.getElementById('divencounter') != null)
		{
			document.getElementById('divencounter').style.display = 'block';
		}
		wordId = document.getElementById('textencounter').value;
		http.open('get', 'getEncounterByTypeHead.action?typehead=' + wordId);
		http.onreadystatechange = processResponseEncounterByTypeHead;
		http.send(null);
	}
	
	function processResponseEncounterByTypeHead() 
	{
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divencounter').innerHTML = response;
		}
	}
	
	
	function makeGetRequestServiceByTypeHead() 
	{
		if (document.getElementById('divservice') != null)
		{
			document.getElementById('divservice').style.display = 'block';
		}
		wordId = document.getElementById('textservice').value;
		http.open('get', 'getServiceByTypeHead.action?typehead=' + wordId);
		http.onreadystatechange = processResponseServiceByTypeHead;
		http.send(null);
	}
	
	function processResponseServiceByTypeHead() 
	{
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divservice').innerHTML = response;
		}
	}	
	
	function selectservice( id, text)
	{
		document.getElementById('service').value = id;
		document.getElementById('textservice').value = text;
		document.getElementById('divservice').style.display = 'none';
	}
	
	
	
	
	function validateIndicationdetail( action, f )
	{
		var strmessage = '';
		
			if (f.encounter.value=='') 
			{
				f.encounter.focus();
				strmessage += "encounter can not be null. ";
			}	
		
			if (isNaN(f.encounter.value)) 
			{
				f.encounter.focus();
				strmessage += "encounter must be a number. ";
			}							
			
			
			if (isNaN(f.service.value)) 
			{
				f.service.focus();
				strmessage += "service must be a number. ";
			}							
			
			
			if (isNaN(f.quantity.value)) 
			{
				f.quantity.focus();
				strmessage += "quantity must be a number. ";
			}							
			
			
			if (isNaN(f.price.value)) 
			{
				f.price.focus();
				strmessage += "price must be a number. ";
			}							
			
			
			if (f.status.value=='') 
			{
				f.status.focus();
				strmessage += "status can not be null. ";
			}	
		
		if (strmessage!='') {
			alert(strmessage); return false;
			document.getElementById('saveindicationdetail').enabled = true;
		}
		else
		{
			
			if (service > 0 )
			{	
				makeGetRequestSaveIndicationdetailByService (action, f);				
			}
			else 
	
			if (encounter > 0 )
			{	
				makeGetRequestSaveIndicationdetailByEncounter (action, f);				
			}
			else 
					
				makeGetRequestSaveIndicationdetail ( action, f );
					
				
		}
	}
	
	
	
	function makeGetRequestSaveIndicationdetailByEncounter ( action, f ) 
	{
				
		var url = '';
		var value = '';
		for (var i = 0; i<f.elements.length; i++) 
		{
			value = f.elements[i].value;
			if (value.indexOf('/')==2) 
			{
			  da = value.split('/'); //ngay thang nam
			  value = da[1] + '/' + da[0] + '/' + da[2] ;
			  
			}
			
			url=url+f.elements[i].name + '=' + value + '&';
		}
		
		if (action  == 'add')
			http.open('get', 'indicationdetailAdd.action?'+url);
		else
			http.open('get', 'indicationdetailUpdate.action?'+url);
		
		http.onreadystatechange = processResponseSaveIndicationdetailByEncounter;
		http.send(null);
		//document.getElementById('addindicationdetail').innerHTML ='';
	}
		

	function processResponseSaveIndicationdetailByEncounter (  ) 
	{
		if(http.readyState == 4){
			makeGetRequestIndicationdetailByEncounter(encounter);
		}
	}	
	
	encounter = 0;
	
	
	function makeGetRequestSaveIndicationdetail ( action, f ) 
	{
				
		var url = '';
		var value = '';
		for (var i = 0; i<f.elements.length; i++) 
		{
			value = f.elements[i].value;
			if (value.indexOf('/')==2) 
			{
			  da = value.split('/'); //ngay thang nam
			  value = da[1] + '/' + da[0] + '/' + da[2] ;
			  
			}
			url=url+f.elements[i].name + '=' + value + '&';
		}
		
		if (action == 'add')
		{
				http.open('get', 'indicationdetailAdd.action?'+url);
				http.onreadystatechange = processResponseSaveAddIndicationdetail ; // no () here please, not know the reason
				for (var i = 0; i<f.elements.length; i++) 
				{
					if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
				}
		}
		else
		{
				http.open('get', 'indicationdetailUpdate.action?'+url);
				http.onreadystatechange = processResponseSaveUpdateIndicationdetail ; // no () here please, not know the reason
				
		}
		http.send(null);
		//document.getElementById('addindicationdetail').innerHTML ='';
	}
		

	function processResponseSaveAddIndicationdetail () 
	{
		if(http.readyState == 4){
			var response = http.responseText;
			var viewurl = 'indicationdetailView.action?id='+response;			
			var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
		
			var action = 'edit';				
			var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddIndicationdetail("+response+","+action+")' >";
		
			document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			//makeGetRequestIndicationdetail();	
					
		}
	}	

	function processResponseSaveUpdateIndicationdetail () 
	{
		if(http.readyState == 4){
			//makeGetRequestIndicationdetail();		
			document.getElementById('msg').innerHTML ='Saved successfully';
			makeGetRequestIndicationdetailByFilter();
		}
	}
	
	
	
	function makeGetRequestAddIndicationdetail(wordId, action) 
	{
		if (action == 'add')
			url = 'indicationdetailAddForm.action?id=' + wordId;
		else
			url = 'indicationdetailEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddIndicationdetail;
		http.send(null);
	}
	
	function processResponseAddIndicationdetail() 
	{
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addindicationdetail').innerHTML = response;
			if ((document.indicationdetailForm.result) != null)
			{
				document.indicationdetailForm.result.focus(); //can kiem tra focusfield truoc
				document.indicationdetailForm.result.select();
			}
		}
	}
	
	function makeGetRequestIndicationdetailByEncounter(wordId) 
	{
		encounter = wordId;
		http.open('get', 'getIndicationdetailByEncounter.action?id=' + wordId);
		http.onreadystatechange = processResponseIndicationdetailByEncounter;
		http.send(null);
	}
	
	function processResponseIndicationdetailByEncounter() 
	{
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divIndicationdetail').innerHTML = response;
			//makeGetRequestAddIndicationdetail(encounter, 'add');
			
			if (document.getElementById('textservice') != null)
			 	document.getElementById('textservice').focus();
		}
	}
	
	
	
			
	function makeGetRequestIndicationdetailByFilter() 
	{
		status = document.getElementById('filterstatus').value; 
		date = document.getElementById('filterdate').value; 

		http.open('get', 'getIndicationdetailBySearch.action?flag=filter&status='+ status +'&date='+date);

		http.onreadystatechange = processResponseIndicationdetailByFilter;
		http.send(null);
	}
		
	function processResponseIndicationdetailByFilter() 
	{
		if(http.readyState == 4){
			var response = http.responseText;
		//	alert(response);
			document.getElementById('tableindicationdetail').innerHTML = response;
		}
	}			
			
</script>