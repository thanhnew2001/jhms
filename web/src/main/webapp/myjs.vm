<script>

		function makeGetRequestPaymenttypeByTypeHead() {
			if (document.getElementById('divpaymenttype') != null)
			{
				document.getElementById('divpaymenttype').style.display = 'block';
			}
			wordId = document.getElementById('textpaymenttype').value;
			http.open('get', 'getPaymenttypeByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponsePaymenttypeByTypeHead;
			http.send(null);
		}
		
		function processResponsePaymenttypeByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divpaymenttype').innerHTML = response;
			}
		}	
		
		function selectpaymenttype( id, text)
		{
			document.getElementById('paymenttype').value = id;
			document.getElementById('textpaymenttype').value = text;
			document.getElementById('divpaymenttype').style.display = 'none';
		}	
		
		
		function makeGetRequestClientByTypeHead() {
			if (document.getElementById('divclient') != null)
			{
				document.getElementById('divclient').style.display = 'block';
			}
			wordId = document.getElementById('textclient').value;
			http.open('get', 'getClientByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseClientByTypeHead;
			http.send(null);
		}
		
		function processResponseClientByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divclient').innerHTML = response;
			}
		}	
		
		function selectclient( id, text)
		{
			document.getElementById('client').value = id;
			document.getElementById('textclient').value = text;
			document.getElementById('divclient').style.display = 'none';
		}	
		
		
		function makeGetRequestIcdByTypeHead() {
			if (document.getElementById('divicd') != null)
			{
				document.getElementById('divicd').style.display = 'block';
			}
			wordId = document.getElementById('texticd').value;
			http.open('get', 'getIcdByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseIcdByTypeHead;
			http.send(null);
		}
		
		function processResponseIcdByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divicd').innerHTML = response;
			}
		}	
		
		function selecticd( id, text)
		{
			document.getElementById('icd').value = id;
			document.getElementById('texticd').value = text;
			document.getElementById('divicd').style.display = 'none';
		}	
		
		
		function makeGetRequestSolvingByTypeHead() {
			if (document.getElementById('divsolving') != null)
			{
				document.getElementById('divsolving').style.display = 'block';
			}
			wordId = document.getElementById('textsolving').value;
			http.open('get', 'getSolvingByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseSolvingByTypeHead;
			http.send(null);
		}
		
		function processResponseSolvingByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divsolving').innerHTML = response;
			}
		}	
		
		function selectsolving( id, text)
		{
			document.getElementById('solving').value = id;
			document.getElementById('textsolving').value = text;
			document.getElementById('divsolving').style.display = 'none';
		}	
		
		
		function makeGetRequestHospitalByTypeHead() {
			if (document.getElementById('divhospital') != null)
			{
				document.getElementById('divhospital').style.display = 'block';
			}
			wordId = document.getElementById('texthospital').value;
			http.open('get', 'getHospitalByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseHospitalByTypeHead;
			http.send(null);
		}
		
		function processResponseHospitalByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divhospital').innerHTML = response;
			}
		}	
		
		function selecthospital( id, text)
		{
			document.getElementById('hospital').value = id;
			document.getElementById('texthospital').value = text;
			document.getElementById('divhospital').style.display = 'none';
		}	
		
		
		function makeGetRequestEncounterByTypeHead() {
			if (document.getElementById('divencounter') != null)
			{
				document.getElementById('divencounter').style.display = 'block';
			}
			wordId = document.getElementById('textencounter').value;
			http.open('get', 'getEncounterByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseEncounterByTypeHead;
			http.send(null);
		}
		
		function processResponseEncounterByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divencounter').innerHTML = response;
			}
		}	
		
		function selectencounter( id, text)
		{
			document.getElementById('encounter').value = id;
			document.getElementById('textencounter').value = '';
			document.getElementById('encounterinfo').innerHTML = text;
			document.getElementById('divencounter').style.display = 'none';
		}	
		
		
		function makeGetRequestDrugByTypeHead() {
			if (document.getElementById('divdrug') != null)
			{
				document.getElementById('divdrug').style.display = 'block';
			}
			wordId = document.getElementById('textdrug').value;
			var druggroup = 0;
			if(document.getElementById('druggroup') != null)
			{
				druggroup = document.getElementById('druggroup').value;
			}
			http.open('get', 'getDrugByTypeHead.action?typehead=' + wordId + '&druggroup=' + druggroup);
			http.onreadystatechange = processResponseDrugByTypeHead;
			http.send(null);
		}
		
		function processResponseDrugByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divdrug').innerHTML = response;
			}
		}	
		
		function selectdrug( id, text)
		{
			document.getElementById('drug').value = id;
			document.getElementById('textdrug').value = text;
			document.getElementById('divdrug').style.display = 'none';
		}	
		
		
		function makeGetRequestUserByTypeHead() {
			if (document.getElementById('divuser') != null)
			{
				document.getElementById('divuser').style.display = 'block';
			}
			wordId = document.getElementById('textuser').value;
			http.open('get', 'getUserByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseUserByTypeHead;
			http.send(null);
		}
		
		function processResponseUserByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divuser').innerHTML = response;
			}
		}	
		
		function selectuser( id, text)
		{
			document.getElementById('user').value = id;
			document.getElementById('textuser').value = text;
			document.getElementById('divuser').style.display = 'none';
		}	
		
		
		function makeGetRequestRoleByTypeHead() {
			if (document.getElementById('divrole') != null)
			{
				document.getElementById('divrole').style.display = 'block';
			}
			wordId = document.getElementById('textrole').value;
			http.open('get', 'getRoleByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseRoleByTypeHead;
			http.send(null);
		}
		
		function processResponseRoleByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divrole').innerHTML = response;
			}
		}	
		
		function selectrole( id, text)
		{
			document.getElementById('role').value = id;
			document.getElementById('textrole').value = text;
			document.getElementById('divrole').style.display = 'none';
		}	
		
		
		function makeGetRequestServicegroupByTypeHead() {
			if (document.getElementById('divservicegroup') != null)
			{
				document.getElementById('divservicegroup').style.display = 'block';
			}
			wordId = document.getElementById('textservicegroup').value;
			http.open('get', 'getServicegroupByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseServicegroupByTypeHead;
			http.send(null);
		}
		
		function processResponseServicegroupByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divservicegroup').innerHTML = response;
			}
		}	
		
		function selectservicegroup( id, text)
		{
			document.getElementById('servicegroup').value = id;
			document.getElementById('textservicegroup').value = text;
			document.getElementById('divservicegroup').style.display = 'none';
		}	
		
		
		function makeGetRequestPrescriptiontemplateByTypeHead() {
			if (document.getElementById('divprescriptiontemplate') != null)
			{
				document.getElementById('divprescriptiontemplate').style.display = 'block';
			}
			wordId = document.getElementById('textprescriptiontemplate').value;
			http.open('get', 'getPrescriptiontemplateByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponsePrescriptiontemplateByTypeHead;
			http.send(null);
		}
		
		function processResponsePrescriptiontemplateByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divprescriptiontemplate').innerHTML = response;
			}
		}	
		
		function selectprescriptiontemplate( id, text)
		{
			document.getElementById('prescriptiontemplate').value = id;
			document.getElementById('textprescriptiontemplate').value = text;
			document.getElementById('divprescriptiontemplate').style.display = 'none';
		}	
		
		
		function makeGetRequestServiceByTypeHead() {
			if (document.getElementById('divservice') != null)
			{
				document.getElementById('divservice').style.display = 'block';
			}
			wordId = document.getElementById('textservice').value;
			http.open('get', 'getServiceByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseServiceByTypeHead;
			http.send(null);
		}
		
		function processResponseServiceByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divservice').innerHTML = response;
			}
		}	
		
		function selectservice( id, text)
		{
			document.getElementById('service').value = id;
			document.getElementById('textservice').value = text;
			document.getElementById('divservice').style.display = 'none';
		}	
		
		
		function makeGetRequestReceiptByTypeHead() {
			if (document.getElementById('divreceipt') != null)
			{
				document.getElementById('divreceipt').style.display = 'block';
			}
			wordId = document.getElementById('textreceipt').value;
			http.open('get', 'getReceiptByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseReceiptByTypeHead;
			http.send(null);
		}
		
		function processResponseReceiptByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divreceipt').innerHTML = response;
			}
		}	
		
		function selectreceipt( id, text)
		{
			document.getElementById('receipt').value = id;
			document.getElementById('textreceipt').value = text;
			document.getElementById('encounterinfo').innerHTML = text;
			document.getElementById('divreceipt').style.display = 'none';
		}	
		
		
		function makeGetRequestDepartmentByTypeHead() {
			if (document.getElementById('divdepartment') != null)
			{
				document.getElementById('divdepartment').style.display = 'block';
			}
			wordId = document.getElementById('textdepartment').value;
			http.open('get', 'getDepartmentByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseDepartmentByTypeHead;
			http.send(null);
		}
		
		function processResponseDepartmentByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divdepartment').innerHTML = response;
			}
		}	
		
		function selectdepartment( id, text)
		{
			document.getElementById('department').value = id;
			document.getElementById('textdepartment').value = text;
			document.getElementById('divdepartment').style.display = 'none';
		}	
		
		
		function makeGetRequestSerpackageByTypeHead() {
			if (document.getElementById('divserpackage') != null)
			{
				document.getElementById('divserpackage').style.display = 'block';
			}
			wordId = document.getElementById('textserpackage').value;
			http.open('get', 'getSerpackageByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseSerpackageByTypeHead;
			http.send(null);
		}
		
		function processResponseSerpackageByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divserpackage').innerHTML = response;
			}
		}	
		
		function selectserpackage( id, text)
		{
			document.getElementById('serpackage').value = id;
			document.getElementById('textserpackage').value = text;
			document.getElementById('divserpackage').style.display = 'none';
		}	
		
		
		function makeGetRequestRoomByTypeHead() {
			if (document.getElementById('divroom') != null)
			{
				document.getElementById('divroom').style.display = 'block';
			}
			wordId = document.getElementById('textroom').value;
			http.open('get', 'getRoomByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseRoomByTypeHead;
			http.send(null);
		}
		
		function processResponseRoomByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divroom').innerHTML = response;
			}
		}	
		
		function selectroom( id, text)
		{
			document.getElementById('room').value = id;
			document.getElementById('textroom').value = text;
			document.getElementById('divroom').style.display = 'none';
		}	
		
		
		function makeGetRequestDistrictByTypeHead() {
			if (document.getElementById('divdistrict') != null)
			{
				document.getElementById('divdistrict').style.display = 'block';
			}
			wordId = document.getElementById('textdistrict').value;
			http.open('get', 'getDistrictByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseDistrictByTypeHead;
			http.send(null);
		}
		
		function processResponseDistrictByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divdistrict').innerHTML = response;
			}
		}	
		
		function selectdistrict( id, text)
		{
			document.getElementById('district').value = id;
			document.getElementById('textdistrict').value = text;
			document.getElementById('divdistrict').style.display = 'none';
		}	
		
		
		function makeGetRequestProvinceByTypeHead() {
			if (document.getElementById('divprovince') != null)
			{
				document.getElementById('divprovince').style.display = 'block';
			}
			wordId = document.getElementById('textprovince').value;
			http.open('get', 'getProvinceByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseProvinceByTypeHead;
			http.send(null);
		}
		
		function processResponseProvinceByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divprovince').innerHTML = response;
			}
		}	
		
		function selectprovince( id, text)
		{
			document.getElementById('province').value = id;
			document.getElementById('textprovince').value = text;
			document.getElementById('divprovince').style.display = 'none';
		}	
		
		
		function makeGetRequestWardByTypeHead() {
			if (document.getElementById('divward') != null)
			{
				document.getElementById('divward').style.display = 'block';
			}
			wordId = document.getElementById('textward').value;
			http.open('get', 'getWardByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseWardByTypeHead;
			http.send(null);
		}
		
		function processResponseWardByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divward').innerHTML = response;
			}
		}	
		
		function selectward( id, text)
		{
			document.getElementById('ward').value = id;
			document.getElementById('textward').value = text;
			document.getElementById('divward').style.display = 'none';
			document.getElementById('company').focus();
		}	
		
		
		function makeGetRequestEthnicByTypeHead() {
			if (document.getElementById('divethnic') != null)
			{
				document.getElementById('divethnic').style.display = 'block';
			}
			wordId = document.getElementById('textethnic').value;
			http.open('get', 'getEthnicByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseEthnicByTypeHead;
			http.send(null);
		}
		
		function processResponseEthnicByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divethnic').innerHTML = response;
			}
		}	
		
		function selectethnic( id, text)
		{
			document.getElementById('ethnic').value = id;
			document.getElementById('textethnic').value = text;
			document.getElementById('divethnic').style.display = 'none';
		}	
		
		
		function makeGetRequestOccupationByTypeHead() {
			if (document.getElementById('divoccupation') != null)
			{
				document.getElementById('divoccupation').style.display = 'block';
			}
			wordId = document.getElementById('textoccupation').value;
			http.open('get', 'getOccupationByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseOccupationByTypeHead;
			http.send(null);
		}
		
		function processResponseOccupationByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divoccupation').innerHTML = response;
			}
		}	
		
		function selectoccupation( id, text)
		{
			document.getElementById('occupation').value = id;
			document.getElementById('textoccupation').value = text;
			document.getElementById('divoccupation').style.display = 'none';
		}	
		
		
		function makeGetRequestImportinvoiceByTypeHead() {
			if (document.getElementById('divimportinvoice') != null)
			{
				document.getElementById('divimportinvoice').style.display = 'block';
			}
			wordId = document.getElementById('textimportinvoice').value;
			http.open('get', 'getImportinvoiceByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseImportinvoiceByTypeHead;
			http.send(null);
		}
		
		function processResponseImportinvoiceByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divimportinvoice').innerHTML = response;
			}
		}	
		
		function selectimportinvoice( id, text)
		{
			document.getElementById('importinvoice').value = id;
			document.getElementById('textimportinvoice').value = text;
			document.getElementById('divimportinvoice').style.display = 'none';
		}	
		
		
		function makeGetRequestProviderByTypeHead() {
			if (document.getElementById('divprovider') != null)
			{
				document.getElementById('divprovider').style.display = 'block';
			}
			wordId = document.getElementById('textprovider').value;
			http.open('get', 'getProviderByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseProviderByTypeHead;
			http.send(null);
		}
		
		function processResponseProviderByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divprovider').innerHTML = response;
			}
		}	
		
		function selectprovider( id, text)
		{
			document.getElementById('provider').value = id;
			document.getElementById('textprovider').value = text;
			document.getElementById('divprovider').style.display = 'none';
		}	
		
		
		function makeGetRequestWarehouseByTypeHead() {
			if (document.getElementById('divwarehouse') != null)
			{
				document.getElementById('divwarehouse').style.display = 'block';
			}
			wordId = document.getElementById('textwarehouse').value;
			http.open('get', 'getWarehouseByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseWarehouseByTypeHead;
			http.send(null);
		}
		
		function processResponseWarehouseByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divwarehouse').innerHTML = response;
			}
		}	
		
		function selectwarehouse( id, text)
		{
			document.getElementById('warehouse').value = id;
			document.getElementById('textwarehouse').value = text;
			document.getElementById('divwarehouse').style.display = 'none';
		}	
		
		
		function makeGetRequestDruginvoiceByTypeHead() {
			if (document.getElementById('divdruginvoice') != null)
			{
				document.getElementById('divdruginvoice').style.display = 'block';
			}
			wordId = document.getElementById('textdruginvoice').value;
			http.open('get', 'getDruginvoiceByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseDruginvoiceByTypeHead;
			http.send(null);
		}
		
		function processResponseDruginvoiceByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divdruginvoice').innerHTML = response;
			}
		}	
		
		function selectdruginvoice( id, text)
		{
			document.getElementById('druginvoice').value = id;
			document.getElementById('textdruginvoice').value = text;
			document.getElementById('divdruginvoice').style.display = 'none';
		}	
		
		
		function makeGetRequestFromwarehouseByTypeHead() {
			if (document.getElementById('divfromwarehouse') != null)
			{
				document.getElementById('divfromwarehouse').style.display = 'block';
			}
			wordId = document.getElementById('textfromwarehouse').value;
			http.open('get', 'getWarehouseByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseFromwarehouseByTypeHead;
			http.send(null);
		}
		
		function processResponseFromwarehouseByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divfromwarehouse').innerHTML = response;
			}
		}	
		
		function selectwarehouse( id, text)
		{
			document.getElementById('warehouse').value = id;
			document.getElementById('textwarehouse').value = text;
			document.getElementById('divwarehouse').style.display = 'none';
		}	
		
		
		function makeGetRequestTowarehouseByTypeHead() {
			if (document.getElementById('divtowarehouse') != null)
			{
				document.getElementById('divtowarehouse').style.display = 'block';
			}
			wordId = document.getElementById('texttowarehouse').value;
			http.open('get', 'getWarehouseByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseTowarehouseByTypeHead;
			http.send(null);
		}
		
		function processResponseTowarehouseByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divtowarehouse').innerHTML = response;
			}
		}	
		
		function selectwarehouse( id, text)
		{
			document.getElementById('warehouse').value = id;
			document.getElementById('textwarehouse').value = text;
			document.getElementById('divwarehouse').style.display = 'none';
		}	
		
		
		function makeGetRequestInddoctorByTypeHead() {
			if (document.getElementById('divinddoctor') != null)
			{
				document.getElementById('divinddoctor').style.display = 'block';
			}
			wordId = document.getElementById('textinddoctor').value;
			http.open('get', 'getDoctorByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseInddoctorByTypeHead;
			http.send(null);
		}
		
		function processResponseInddoctorByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divinddoctor').innerHTML = response;
			}
		}	
		
		function selectdoctor( id, text)
		{
			document.getElementById('doctor').value = id;
			document.getElementById('textdoctor').value = text;
			document.getElementById('divdoctor').style.display = 'none';
		}	
		
		
		function makeGetRequestExedoctorByTypeHead() {
			if (document.getElementById('divexedoctor') != null)
			{
				document.getElementById('divexedoctor').style.display = 'block';
			}
			wordId = document.getElementById('textexedoctor').value;
			http.open('get', 'getDoctorByTypeHead.action?typehead=' + wordId);
			http.onreadystatechange = processResponseExedoctorByTypeHead;
			http.send(null);
		}
		
		function processResponseExedoctorByTypeHead() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('divexedoctor').innerHTML = response;
			}
		}	
		
		function selectdoctor( id, text)
		{
			document.getElementById('doctor').value = id;
			document.getElementById('textdoctor').value = text;
			document.getElementById('divdoctor').style.display = 'none';
		}	
		
		
	
	function makeGetRequestAddPaymenttype(wordId, action) {
		if (action == 'add')
			url = 'paymenttypeAddForm.action?id=' + wordId;
		else
			url = 'paymenttypeEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddPaymenttype;
		http.send(null);
	}
	
	function processResponseAddPaymenttype() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addpaymenttype').innerHTML = response;
			if ((document.paymenttypeForm.node) != null)
				document.paymenttypeForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestPaymenttypeBySearch() {
			wordId = document.getElementById('searchpaymenttype').value;
			con = document.getElementById('combopaymenttype').value;
			http.open('get', 'getPaymenttypeBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponsePaymenttypeBySearch;
			http.send(null);
		}
		
	function processResponsePaymenttypeBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablepaymenttype').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchpaymenttype').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestPaymenttypeByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getPaymenttypeByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponsePaymenttypeByCode;
			http.send(null);
	}
		
	function processResponsePaymenttypeByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddPaymenttype(response, 'edit');
				else
					//document.getElementById('searchpaymenttype').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validatePaymenttype( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSavePaymenttype ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddClient(wordId, action) {
		if (action == 'add')
		{
			url = 'clientAddForm.action?id=' + wordId;
			clientaction = 'add';
		}
		else
		{
			url = 'clientEditForm.action?id=' + wordId;	
			clientaction = 'edit';
		}
		http.open('get', url);
		http.onreadystatechange = processResponseAddClient;
		http.send(null);
	}
	
	function processResponseAddClient() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addclient').innerHTML = response;
			//alert(document.getElementById('code'));
			if (document.getElementById('code') != null)
			{
				document.getElementById('code').focus(); //can kiem tra focusfield truoc
			}
		}
	}	
	
	function makeGetRequestBodypartBySearch(keyword, action) {			
			http.open('get', 'getBodypartBySearch.action?action='+action+'&keyword='+keyword);
			http.onreadystatechange = processResponseBodypartBySearch;
			http.send(null);
		}
		
	function processResponseBodypartBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablebodypartview').innerHTML = response;
			}
	}	
	
	//for search inline form
	function makeGetRequestClientBySearch() {
			wordId = document.getElementById('searchclient').value;
			con = document.getElementById('comboclient').value;
			http.open('get', 'getClientBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseClientBySearch;
			http.send(null);
		}
		
	function processResponseClientBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableclient').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchclient').value='';
	}		
	
	
	function makeGetRequestClientByFilter() {
			createddate = document.getElementById('filtercreateddate').value; 
			http.open('get', 'getClientBySearch.action?flag=filter&createddate='+ createddate);
			http.onreadystatechange = processResponseClientByFilter;
			http.send(null);
		}
		
	function processResponseClientByFilter() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableclient').innerHTML = response;
				
				makeGetRequestAddClient(0, 'add');
			}
	}	
	
	
	//for search client by code
	function makeGetRequestClientByCode(field) {
			wordId = document.getElementById(field).value;
			if (wordId != '')
			{
			document.getElementById('notice').innerHTML = 'Searching client with '+field+' is ' + wordId;

				http.open('get', 'getClientByCode.action?con='+field+'&typehead=' + wordId);
				http.onreadystatechange = processResponseClientByCode;
				http.send(null);
			}
	}
		
	function processResponseClientByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddClient(response, 'edit');
				else
					//document.getElementById('searchclient').innerHTML="i18n.get('notfound')";
					document.getElementById('notice').innerHTML = 'Not found any patients';
			}
	}		
	
	
	function validateClient( action, f )
	{
		var strmessage = '';
		
			if (f.node.value=='') 
			{
				f.node.focus();
				strmessage += "node can not be null. ";
			}	
		
			if (f.birthday.value=='') 
			{
				f.birthday.focus();
				strmessage += "birthday must be not null. ";
			}
			
			if ( (f.birthday.value!='') && isDate(java2mysql(f.birthday.value)) == false) 
			{
				f.birthday.focus();
				strmessage += "birthday must be a valid date. ";
			}	
		
			if (isNaN(f.occupation.value)) 
			{
				f.occupation.focus();
				strmessage += "occupation must be a number. ";
			}							
			
			
			if (isNaN(f.ethnic.value)) 
			{
				f.ethnic.focus();
				strmessage += "ethnic must be a number. ";
			}							
			
			
			if (isNaN(f.ward.value)) 
			{
				f.ward.focus();
				strmessage += "ward must be a number. ";
			}							
			
			
			if (isNaN(f.paymenttype.value)) 
			{
				f.paymenttype.focus();
				strmessage += "paymenttype must be a number. ";
			}							
			
			
			if ( (f.joineddate.value!='') && isDate(java2mysql(f.joineddate.value)) == false) 
			{
				f.joineddate.focus();
				strmessage += "joineddate must be a valid date. ";
			}	
		
			if ( (f.expireddate.value!='') && isDate(java2mysql(f.expireddate.value)) == false) 
			{
				f.expireddate.focus();
				strmessage += "expireddate must be a valid date. ";
			}	

			if ( (f.createddate.value!='') && isDate(java2mysql(f.createddate.value)) == false) 
			{
				f.createddate.focus();
				strmessage += "createddate must be a valid date. ";
			}	
			
			if (f.textward.value =='')  
			{
				f.textward.focus();
				strmessage += "please select ward !. ";
			}	
			
			if (f.room.value > 0 && f.service.value == '' && f.serpackage.value == '')
			{
				f.service.focus();
				strmessage += "Please select either service or service package ";
			}
			
				if (strmessage!='') {
			alert(strmessage); 
			document.getElementById('saveclient').disabled = false;
			return false;
		}
		else
		{
			
			if (paymenttype > 0 )
			{	
				makeGetRequestSaveClientByPaymenttype (action, f);				
			}
			else 
	
			if (occupation > 0 )
			{	
				makeGetRequestSaveClientByOccupation (action, f);				
			}
			else 
	
			if (ward > 0 )
			{	
				makeGetRequestSaveClientByWard (action, f);				
			}
			else 
	
			if (ethnic > 0 )
			{	
				makeGetRequestSaveClientByEthnic (action, f);				
			}
			else 
					
				makeGetRequestSaveClient ( action, f );
					
				
		}
	}
	
	client = 0;
	
	function makeGetRequestEncounterByClient(wordId) {
		client = wordId;
		http.open('get', 'getEncounterByClient.action?id=' + wordId);
		http.onreadystatechange = processResponseEncounterByClient;
		http.send(null);
	}
	
	function processResponseEncounterByClient() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divEncounter').innerHTML = response;
			//makeGetRequestAddEncounter(client, 'add');
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveEncounterByClient ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'encounterAdd.action?'+url);
			else
				http.open('get', 'encounterUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveEncounterByClient;
			http.send(null);
			document.getElementById('addencounter').innerHTML ='';
	}
		

	function processResponseSaveEncounterByClient (  ) {
			if(http.readyState == 4){
				makeGetRequestEncounterByClient(client);
			}
	}	
	
	
	function makeGetRequestAddService(wordId, action) {
		if (action == 'add')
			url = 'serviceAddForm.action?id=' + wordId;
		else
			url = 'serviceEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddService;
		http.send(null);
	}
	
	function processResponseAddService() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addservice').innerHTML = response;
			if ((document.serviceForm.node) != null)
				document.serviceForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestServiceBySearch() {
			wordId = document.getElementById('searchservice').value;
			con = document.getElementById('comboservice').value;
			http.open('get', 'getServiceBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseServiceBySearch;
			http.send(null);
		}
		
	function processResponseServiceBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableservice').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchservice').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestServiceByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getServiceByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseServiceByCode;
			http.send(null);
	}
		
	function processResponseServiceByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddService(response, 'edit');
				else
					//document.getElementById('searchservice').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateService( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.servicegroup.value)) 
			{
				f.servicegroup.focus();
				strmessage += "servicegroup must be a number. ";
			}							
			
			
			if (isNaN(f.price.value)) 
			{
				f.price.focus();
				strmessage += "price must be a number. ";
			}							
			
			
			if (isNaN(f.insuranceprice.value)) 
			{
				f.insuranceprice.focus();
				strmessage += "insuranceprice must be a number. ";
			}							
			
			
			if (isNaN(f.department.value)) 
			{
				f.department.focus();
				strmessage += "department must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (servicegroup > 0 )
			{	
				makeGetRequestSaveServiceByServicegroup (action, f);				
			}
			else 
	
			if (department > 0 )
			{	
				makeGetRequestSaveServiceByDepartment (action, f);				
			}
			else 
					
				makeGetRequestSaveService ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddEncounter(wordId, action) {
		if (action == 'add')
		{
			url = 'encounterAddForm.action?id=' + wordId;
			encounteraction = 'add';
		}	
		else
		{
			url = 'encounterEditForm.action?id=' + wordId;	
			encounteraction = 'edit';
		}
		http.open('get', url);
		http.onreadystatechange = processResponseAddEncounter;
		http.send(null);
	}
	
	function processResponseAddEncounter() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addencounter').innerHTML = response;
			if ((document.encounterForm.initialdiagnosis) != null)
				document.encounterForm.initialdiagnosis.focus(); //can kiem tra focusfield truoc
				
			//document.getElementById('form').click();

		}
	}	
	
	function makeGetRequestEncounterBySearch() {
			wordId = document.getElementById('searchencounter').value;
			con = document.getElementById('comboencounter').value;
			http.open('get', 'getEncounterBySearch.action?con=' + con + '&typehead=' + wordId);

			http.onreadystatechange = processResponseEncounterBySearch;
			http.send(null);
		}
		
	function processResponseEncounterBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableencounter').innerHTML = response;
			}
	}	
	
	//not paid search
	function makeGetRequestEncounterNotPaidBySearch() {
			wordId = document.getElementById('searchencounter').value;
			con = document.getElementById('comboencounter').value;
			http.open('get', 'getEncounterNotPaidBySearch.action?con=' + con + '&typehead=' + wordId);

			http.onreadystatechange = processResponseEncounterBySearch;
			http.send(null);
		}
		

	
	
	function makeGetRequestEncounterByFilter() {
			date = document.getElementById('filterdate').value; 
		solving = document.getElementById('filtersolving').value; 
		;

			http.open('get', 'getEncounterBySearch.action?flag=filter&date='+ date+'&solving='+ solving);
			http.onreadystatechange = processResponseEncounterByFilter;
			http.send(null);
		}
		
	function processResponseEncounterByFilter() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableencounter').innerHTML = response;
			}
	}	
	
	
	//for search client by code
	function makeGetRequestEncounterByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getEncounterByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseEncounterByCode;
			http.send(null);
	}
		
	function processResponseEncounterByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddEncounter(response, 'edit');
				else
					//document.getElementById('searchencounter').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateEncounter( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.client.value)) 
			{
				f.client.focus();
				strmessage += "client must be a number. ";
			}							
			
			
			if ( (f.joineddate.value!='') && isDate(java2mysql(f.joineddate.value)) == false) 
			{
				f.joineddate.focus();
				strmessage += "joineddate must be a valid date. ";
			}	
		
			if ( (f.expireddate.value!='') && isDate(java2mysql(f.expireddate.value)) == false) 
			{
				f.expireddate.focus();
				strmessage += "expireddate must be a valid date. ";
			}	
		
			if ( (f.date.value!='') && isDate(java2mysql(f.date.value)) == false) 
			{
				f.date.focus();
				strmessage += "date must be a valid date. ";
			}	
		
			if (isNaN(f.room.value)) 
			{
				f.room.focus();
				strmessage += "room must be a number. ";
			}							
			
			
			if (isNaN(f.hospital.value)) 
			{
				f.hospital.focus();
				strmessage += "hospital must be a number. ";
			}							
			
			
			if (isNaN(f.icd.value)) 
			{
				f.icd.focus();
				strmessage += "icd must be a number. ";
			}							
			
			
			if (isNaN(f.solving.value)) 
			{
				f.solving.focus();
				strmessage += "solving must be a number. ";
			}							
			
			
			if ( (f.revisitdate.value!='') && isDate(java2mysql(f.revisitdate.value)) == false) 
			{
				f.revisitdate.focus();
				strmessage += "revisitdate must be a valid date. ";
			}	
		
			if (isNaN(f.prescriptiontemplate.value)) 
			{
				f.prescriptiontemplate.focus();
				strmessage += "prescriptiontemplate must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (client > 0 )
			{	
				makeGetRequestSaveEncounterByClient (action, f);				
			}
			
			
			else 
					
				makeGetRequestSaveEncounter ( action, f );
					
				
		}
	}
	
	encounter = 0;
	
	function makeGetRequestPrescriptiondetailByEncounter(wordId) {
		encounter = wordId;
		http.open('get', 'getPrescriptiondetailByEncounter.action?id=' + wordId);
		http.onreadystatechange = processResponsePrescriptiondetailByEncounter;
		http.send(null);
	}
	
	function processResponsePrescriptiondetailByEncounter() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divPrescriptiondetail').innerHTML = response;
			//makeGetRequestAddPrescriptiondetail(encounter, 'add');
			//alert('test');
			 document.getElementById('textdrug').focus();
		}
	}		
	
	//use ajax to save
	function makeGetRequestSavePrescriptiondetailByEncounter ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'prescriptiondetailAdd.action?'+url);
			else
				http.open('get', 'prescriptiondetailUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSavePrescriptiondetailByEncounter;
			http.send(null);
			document.getElementById('addprescriptiondetail').innerHTML ='';
	}
		

	function processResponseSavePrescriptiondetailByEncounter (  ) {
			if(http.readyState == 4){
				makeGetRequestPrescriptiondetailByEncounter(encounter);
			}
	}	
	
	encounter = 0;
	
	function makeGetRequestIndicationdetailByEncounter(wordId) {
		encounter = wordId;
		http.open('get', 'getIndicationdetailByEncounter.action?id=' + wordId);
		http.onreadystatechange = processResponseIndicationdetailByEncounter;
		http.send(null);
	}
	
	function processResponseIndicationdetailByEncounter() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divIndicationdetail').innerHTML = response;
			//makeGetRequestAddIndicationdetail(encounter, 'add');
			
			if (document.getElementById('textservice') != null)
			 	document.getElementById('textservice').focus();
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveIndicationdetailByEncounter ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'indicationdetailAdd.action?'+url);
			else
				http.open('get', 'indicationdetailUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveIndicationdetailByEncounter;
			http.send(null);
			//document.getElementById('addindicationdetail').innerHTML ='';
	}
		

	function processResponseSaveIndicationdetailByEncounter (  ) {
			if(http.readyState == 4){
				makeGetRequestIndicationdetailByEncounter(encounter);
			}
	}	
	
	encounter = 0;
	
	function makeGetRequestReceiptByEncounter(wordId) {
		encounter = wordId;
		http.open('get', 'getReceiptByEncounter.action?id=' + wordId);
		http.onreadystatechange = processResponseReceiptByEncounter;
		http.send(null);
	}
	
	function processResponseReceiptByEncounter() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divReceipt').innerHTML = response;
			//makeGetRequestAddReceipt(encounter, 'add');
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveReceiptByEncounter ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'receiptAdd.action?'+url);
			else
				http.open('get', 'receiptUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveReceiptByEncounter;
			http.send(null);
			document.getElementById('addreceipt').innerHTML ='';
	}
		

	function processResponseSaveReceiptByEncounter (  ) {
			if(http.readyState == 4){
				makeGetRequestReceiptByEncounter(encounter);
			}
	}	
	
	encounter = 0;
	
	function makeGetRequestDruginvoiceByEncounter(wordId) {
		encounter = wordId;
		http.open('get', 'getDruginvoiceByEncounter.action?id=' + wordId);
		http.onreadystatechange = processResponseDruginvoiceByEncounter;
		http.send(null);
	}
	
	function processResponseDruginvoiceByEncounter() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divDruginvoice').innerHTML = response;
			//makeGetRequestAddDruginvoice(encounter, 'add');
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveDruginvoiceByEncounter ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'druginvoiceAdd.action?'+url);
			else
				http.open('get', 'druginvoiceUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveDruginvoiceByEncounter;
			http.send(null);
			document.getElementById('adddruginvoice').innerHTML ='';
	}
		

	function processResponseSaveDruginvoiceByEncounter (  ) {
			if(http.readyState == 4){
				makeGetRequestDruginvoiceByEncounter(encounter);
			}
	}	
	
	
	function makeGetRequestAddIcd(wordId, action) {
		if (action == 'add')
			url = 'icdAddForm.action?id=' + wordId;
		else
			url = 'icdEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddIcd;
		http.send(null);
	}
	
	function processResponseAddIcd() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addicd').innerHTML = response;
			if ((document.icdForm.node) != null)
				document.icdForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestIcdBySearch() {
			wordId = document.getElementById('searchicd').value;
			con = document.getElementById('comboicd').value;
			http.open('get', 'getIcdBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseIcdBySearch;
			http.send(null);
		}
		
	function processResponseIcdBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableicd').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchicd').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestIcdByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getIcdByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseIcdByCode;
			http.send(null);
	}
		
	function processResponseIcdByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddIcd(response, 'edit');
				else
					//document.getElementById('searchicd').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateIcd( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveIcd ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddDrug(wordId, action) {
		if (action == 'add')
			url = 'drugAddForm.action?id=' + wordId;
		else
			url = 'drugEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddDrug;
		http.send(null);
	}
	
	function processResponseAddDrug() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('adddrug').innerHTML = response;
			if ((document.drugForm.node) != null)
				document.drugForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestDrugBySearch() {
			wordId = document.getElementById('searchdrug').value;
			con = document.getElementById('combodrug').value;
			http.open('get', 'getDrugBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseDrugBySearch;
			http.send(null);
		}
		
	function processResponseDrugBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tabledrug').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchdrug').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestDrugByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getDrugByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseDrugByCode;
			http.send(null);
	}
		
	function processResponseDrugByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddDrug(response, 'edit');
				else
					//document.getElementById('searchdrug').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateDrug( action, f )
	{
		var strmessage = '';
		
			if (f.node.value=='') 
			{
				f.node.focus();
				strmessage += "node can not be null. ";
			}	
		
			if (isNaN(f.price.value)) 
			{
				f.price.focus();
				strmessage += "price must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
				makeGetRequestSaveDrug ( action, f );
		}
	}
	
	
	function makeGetRequestAddPrescriptiondetail(wordId, action) {
		alert(worId);
		if (action == 'add')
			url = 'prescriptiondetailAddForm.action?id=' + wordId;
		else
			url = 'prescriptiondetailEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddPrescriptiondetail;
		http.send(null);
	}
	
	function processResponseAddPrescriptiondetail() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addprescriptiondetail').innerHTML = response;
			if ((document.prescriptiondetailForm.node) != null)
				document.prescriptiondetailForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestPrescriptiondetailBySearch() {
			wordId = document.getElementById('searchprescriptiondetail').value;
			con = document.getElementById('comboprescriptiondetail').value;
			http.open('get', 'getPrescriptiondetailBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponsePrescriptiondetailBySearch;
			http.send(null);
		}
		
	function processResponsePrescriptiondetailBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableprescriptiondetail').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchprescriptiondetail').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestPrescriptiondetailByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getPrescriptiondetailByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponsePrescriptiondetailByCode;
			http.send(null);
	}
		
	function processResponsePrescriptiondetailByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddPrescriptiondetail(response, 'edit');
				else
					//document.getElementById('searchprescriptiondetail').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validatePrescriptiondetail( action, f )
	{
		var strmessage = '';
		
			if (document.getElementById('solving').value != 3)  //ke toa
			{
				document.getElementById('solving').focus();
				strmessage += " Vui long chon xu tri la: Ke toa ";
			}		
		
			if (isNaN(f.encounter.value)) 
			{
				f.encounter.focus();
				strmessage += "encounter must be a number. ";
			}							
			
			
			if (isNaN(f.drug.value)) 
			{
				f.drug.focus();
				strmessage += "drug must be a number. ";
			}							
			
			
			if (isNaN(f.quantity.value)) 
			{
				f.quantity.focus();
				strmessage += "quantity must be a number. ";
			}							
			
			
			if (isNaN(f.price.value)) 
			{
				f.price.focus();
				strmessage += "price must be a number. ";
			}							
			
			
			if (isNaN(f.timeuse.value)) 
			{
				f.timeuse.focus();
				strmessage += "timeuse must be a number. ";
			}							
			
			
								
			
			
			if (f.paid.value=='') 
			{
				f.paid.focus();
				strmessage += "paid can not be null. ";
			}	
		
		if (strmessage!='') {
			alert(strmessage); 
			document.getElementById('saveprescriptiondetail').disabled = false;
			return false;
		}
		else
		{
			
			if (encounter > 0 )
			{	
				makeGetRequestSavePrescriptiondetailByEncounter (action, f);				
			}
			else 
	
			if (drug > 0 )
			{	
				makeGetRequestSavePrescriptiondetailByDrug (action, f);				
			}
			else 
					
				makeGetRequestSavePrescriptiondetail ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddVitalsign(wordId, action) {
		if (action == 'add')
			url = 'vitalsignAddForm.action?id=' + wordId;
		else
			url = 'vitalsignEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddVitalsign;
		http.send(null);
	}
	
	function processResponseAddVitalsign() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addvitalsign').innerHTML = response;
			if ((document.vitalsignForm.node) != null)
				document.vitalsignForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestVitalsignBySearch() {
			wordId = document.getElementById('searchvitalsign').value;
			con = document.getElementById('combovitalsign').value;
			http.open('get', 'getVitalsignBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseVitalsignBySearch;
			http.send(null);
		}
		
	function processResponseVitalsignBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablevitalsign').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchvitalsign').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestVitalsignByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getVitalsignByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseVitalsignByCode;
			http.send(null);
	}
		
	function processResponseVitalsignByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddVitalsign(response, 'edit');
				else
					//document.getElementById('searchvitalsign').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateVitalsign( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.encounter.value)) 
			{
				f.encounter.focus();
				strmessage += "encounter must be a number. ";
			}							
			
			
			if (isNaN(f.pulse.value)) 
			{
				f.pulse.focus();
				strmessage += "pulse must be a number. ";
			}							
			
			
			if (isNaN(f.pressureh.value)) 
			{
				f.pressureh.focus();
				strmessage += "pressureh must be a number. ";
			}							
			
			
			if (isNaN(f.pressurel.value)) 
			{
				f.pressurel.focus();
				strmessage += "pressurel must be a number. ";
			}							
			
			
			if (isNaN(f.temparature.value)) 
			{
				f.temparature.focus();
				strmessage += "temparature must be a number. ";
			}							
			
			
			if (isNaN(f.breath.value)) 
			{
				f.breath.focus();
				strmessage += "breath must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (encounter > 0 )
			{	
				makeGetRequestSaveVitalsignByEncounter (action, f);				
			}
			else 
	
			
			{	
				makeGetRequestSaveVitalsign ( action, f );				
			}
					
				
		}
	}
	
	
	function makeGetRequestAddUser(wordId, action) {
		if (action == 'add')
			url = 'userAddForm.action?id=' + wordId;
		else
			url = 'userEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddUser;
		http.send(null);
	}
	
	function processResponseAddUser() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('adduser').innerHTML = response;
			if ((document.userForm.node) != null)
				document.userForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestUserBySearch() {
			wordId = document.getElementById('searchuser').value;
			con = document.getElementById('combouser').value;
			http.open('get', 'getUserBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseUserBySearch;
			http.send(null);
		}
		
	function processResponseUserBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableuser').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchuser').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestUserByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getUserByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseUserByCode;
			http.send(null);
	}
		
	function processResponseUserByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddUser(response, 'edit');
				else
					//document.getElementById('searchuser').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateUser( action, f )
	{
		var strmessage = '';
		
			if (f.position.value=='') 
			{
				f.position.focus();
				strmessage += "position can not be null. ";
			}	
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveUser ( action, f );
					
				
		}
	}
	
	user = 0;
	
	function makeGetRequestUserroleByUser(wordId) {
		user = wordId;
		http.open('get', 'getUserroleByUser.action?id=' + wordId);
		http.onreadystatechange = processResponseUserroleByUser;
		http.send(null);
	}
	
	function processResponseUserroleByUser() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divUserrole').innerHTML = response;
			//makeGetRequestAddUserrole(user, 'add');
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveUserroleByUser ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'userroleAdd.action?'+url);
			else
				http.open('get', 'userroleUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveUserroleByUser;
			http.send(null);
			document.getElementById('adduserrole').innerHTML ='';
	}
		

	function processResponseSaveUserroleByUser (  ) {
			if(http.readyState == 4){
				makeGetRequestUserroleByUser(user);
			}
	}	
	
	
	function makeGetRequestAddUserrole(wordId, action) {
		if (action == 'add')
			url = 'userroleAddForm.action?id=' + wordId;
		else
			url = 'userroleEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddUserrole;
		http.send(null);
	}
	
	function processResponseAddUserrole() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('adduserrole').innerHTML = response;
			if ((document.userroleForm.node) != null)
				document.userroleForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestUserroleBySearch() {
			wordId = document.getElementById('searchuserrole').value;
			con = document.getElementById('combouserrole').value;
			http.open('get', 'getUserroleBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseUserroleBySearch;
			http.send(null);
		}
		
	function processResponseUserroleBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableuserrole').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchuserrole').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestUserroleByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getUserroleByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseUserroleByCode;
			http.send(null);
	}
		
	function processResponseUserroleByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddUserrole(response, 'edit');
				else
					//document.getElementById('searchuserrole').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateUserrole( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.user.value)) 
			{
				f.user.focus();
				strmessage += "user must be a number. ";
			}							
			
			
			if (isNaN(f.role.value)) 
			{
				f.role.focus();
				strmessage += "role must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (user > 0 )
			{	
				makeGetRequestSaveUserroleByUser (action, f);				
			}
			else 
	
			if (role > 0 )
			{	
				makeGetRequestSaveUserroleByRole (action, f);				
			}
			else 
					
				makeGetRequestSaveUserrole ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddRole(wordId, action) {
		if (action == 'add')
			url = 'roleAddForm.action?id=' + wordId;
		else
			url = 'roleEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddRole;
		http.send(null);
	}
	
	function processResponseAddRole() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addrole').innerHTML = response;
			if ((document.roleForm.node) != null)
				document.roleForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestRoleBySearch() {
			wordId = document.getElementById('searchrole').value;
			con = document.getElementById('comborole').value;
			http.open('get', 'getRoleBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseRoleBySearch;
			http.send(null);
		}
		
	function processResponseRoleBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablerole').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchrole').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestRoleByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getRoleByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseRoleByCode;
			http.send(null);
	}
		
	function processResponseRoleByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddRole(response, 'edit');
				else
					//document.getElementById('searchrole').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateRole( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveRole ( action, f );
					
				
		}
	}
	
	role = 0;
	
	function makeGetRequestUserroleByRole(wordId) {
		role = wordId;
		http.open('get', 'getUserroleByRole.action?id=' + wordId);
		http.onreadystatechange = processResponseUserroleByRole;
		http.send(null);
	}
	
	function processResponseUserroleByRole() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divUserrole').innerHTML = response;
			//makeGetRequestAddUserrole(role, 'add');
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveUserroleByRole ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'userroleAdd.action?'+url);
			else
				http.open('get', 'userroleUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveUserroleByRole;
			http.send(null);
			document.getElementById('adduserrole').innerHTML ='';
	}
		

	function processResponseSaveUserroleByRole (  ) {
			if(http.readyState == 4){
				makeGetRequestUserroleByRole(role);
			}
	}	
	
	role = 0;
	
	function makeGetRequestRoleformByRole(wordId) {
		role = wordId;
		http.open('get', 'getRoleformByRole.action?id=' + wordId);
		http.onreadystatechange = processResponseRoleformByRole;
		http.send(null);
	}
	
	function processResponseRoleformByRole() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divRoleform').innerHTML = response;
			//makeGetRequestAddRoleform(role, 'add');
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveRoleformByRole ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'roleformAdd.action?'+url);
			else
				http.open('get', 'roleformUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveRoleformByRole;
			http.send(null);
			document.getElementById('addroleform').innerHTML ='';
	}
		

	function processResponseSaveRoleformByRole (  ) {
			if(http.readyState == 4){
				makeGetRequestRoleformByRole(role);
			}
	}	
	
	
	function makeGetRequestAddRoleform(wordId, action) {
		if (action == 'add')
			url = 'roleformAddForm.action?id=' + wordId;
		else
			url = 'roleformEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddRoleform;
		http.send(null);
	}
	
	function processResponseAddRoleform() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addroleform').innerHTML = response;
			if ((document.roleformForm.node) != null)
				document.roleformForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestRoleformBySearch() {
			wordId = document.getElementById('searchroleform').value;
			con = document.getElementById('comboroleform').value;
			http.open('get', 'getRoleformBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseRoleformBySearch;
			http.send(null);
		}
		
	function processResponseRoleformBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableroleform').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchroleform').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestRoleformByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getRoleformByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseRoleformByCode;
			http.send(null);
	}
		
	function processResponseRoleformByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddRoleform(response, 'edit');
				else
					//document.getElementById('searchroleform').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateRoleform( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.role.value)) 
			{
				f.role.focus();
				strmessage += "role must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (role > 0 )
			{	
				makeGetRequestSaveRoleformByRole (action, f);				
			}
			else 
	
			
			{	
				makeGetRequestSaveRoleform ( action, f );				
			}
					
				
		}
	}
	
	
	function makeGetRequestAddServicegroup(wordId, action) {
		if (action == 'add')
			url = 'servicegroupAddForm.action?id=' + wordId;
		else
			url = 'servicegroupEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddServicegroup;
		http.send(null);
	}
	
	function processResponseAddServicegroup() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addservicegroup').innerHTML = response;
			if ((document.servicegroupForm.node) != null)
				document.servicegroupForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestServicegroupBySearch() {
			wordId = document.getElementById('searchservicegroup').value;
			con = document.getElementById('comboservicegroup').value;
			http.open('get', 'getServicegroupBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseServicegroupBySearch;
			http.send(null);
		}
		
	function processResponseServicegroupBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableservicegroup').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchservicegroup').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestServicegroupByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getServicegroupByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseServicegroupByCode;
			http.send(null);
	}
		
	function processResponseServicegroupByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddServicegroup(response, 'edit');
				else
					//document.getElementById('searchservicegroup').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateServicegroup( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveServicegroup ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddIndicationdetail(wordId, action) {
		if (action == 'add')
			url = 'indicationdetailAddForm.action?id=' + wordId;
		else
			url = 'indicationdetailEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddIndicationdetail;
		http.send(null);
	}
	
	function processResponseAddIndicationdetail() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addindicationdetail').innerHTML = response;
			if ((document.indicationdetailForm.result) != null)
			{
				document.indicationdetailForm.result.focus(); //can kiem tra focusfield truoc
				document.indicationdetailForm.result.select();
			}
		}
	}	
			
	
	//for search inline form
	function makeGetRequestIndicationdetailBySearch() {
			wordId = document.getElementById('searchindicationdetail').value;
			con = document.getElementById('comboindicationdetail').value;
			http.open('get', 'getIndicationdetailBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseIndicationdetailBySearch;
			http.send(null);
		}
		
	function processResponseIndicationdetailBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableindicationdetail').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchindicationdetail').value='';
	}		
	
	
	function makeGetRequestIndicationdetailByFilter() {
			status = document.getElementById('filterstatus').value; 
			date = document.getElementById('filterdate').value; 

			http.open('get', 'getIndicationdetailBySearch.action?flag=filter&status='+ status +'&date='+date);

			http.onreadystatechange = processResponseIndicationdetailByFilter;
			http.send(null);
		}
		
	function processResponseIndicationdetailByFilter() {
			if(http.readyState == 4){
				var response = http.responseText;
			//	alert(response);
				document.getElementById('tableindicationdetail').innerHTML = response;
			}
	}	
	
	
	//for search client by code
	function makeGetRequestIndicationdetailByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getIndicationdetailByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseIndicationdetailByCode;
			http.send(null);
	}
		
	function processResponseIndicationdetailByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddIndicationdetail(response, 'edit');
				else
					//document.getElementById('searchindicationdetail').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateIndicationdetail( action, f )
	{
		var strmessage = '';
		
			if (f.encounter.value=='') 
			{
				f.encounter.focus();
				strmessage += "encounter can not be null. ";
			}	
		
			if (isNaN(f.encounter.value)) 
			{
				f.encounter.focus();
				strmessage += "encounter must be a number. ";
			}							
			
			
			if (isNaN(f.service.value)) 
			{
				f.service.focus();
				strmessage += "service must be a number. ";
			}							
			
			
			if (isNaN(f.quantity.value)) 
			{
				f.quantity.focus();
				strmessage += "quantity must be a number. ";
			}							
			
			
			if (isNaN(f.price.value)) 
			{
				f.price.focus();
				strmessage += "price must be a number. ";
			}							
			
			
			if (f.status.value=='') 
			{
				f.status.focus();
				strmessage += "status can not be null. ";
			}	
		
		if (strmessage!='') {
			alert(strmessage); return false;
			document.getElementById('saveindicationdetail').enabled = true;
		}
		else
		{
			
			if (service > 0 )
			{	
				makeGetRequestSaveIndicationdetailByService (action, f);				
			}
			else 
	
			if (encounter > 0 )
			{	
				makeGetRequestSaveIndicationdetailByEncounter (action, f);				
			}
			else 
					
				makeGetRequestSaveIndicationdetail ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddReceipt(wordId, action) {
		if (action == 'add')
			url = 'receiptAddForm.action?id=' + wordId;
		else
			url = 'receiptEditForm.action?id=' + wordId;	
		http.open('get', url);
		receipt = wordId;
		http.onreadystatechange = processResponseAddReceipt;
		http.send(null);
	}
	
	//load add or update form of receipt
	function processResponseAddReceipt() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addreceipt').innerHTML = response;
			if ( document.getElementById('getencounter') != null)
				document.getElementById('getencounter').focus(); //can kiem tra focusfield truoc

			if (receipt !=0)
			{
				makeGetRequestReceiptdetailByReceipt(receipt);	
			}
	
		}
	}	
			
	
	//for search inline form
	function makeGetRequestReceiptBySearch() {
			wordId = document.getElementById('searchreceipt').value;
			con = document.getElementById('comboreceipt').value;
			http.open('get', 'getReceiptBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseReceiptBySearch;
			http.send(null);
		}
		
	function processResponseReceiptBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablereceipt').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchreceipt').value='';
	}		
	
	
	function makeGetRequestReceiptByFilter() {
			date = document.getElementById('filterdate').value; 
			http.open('get', 'getReceiptBySearch.action?flag=filter&date='+ date);
			http.onreadystatechange = processResponseReceiptByFilter;
			http.send(null);
		}
		
	function processResponseReceiptByFilter() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablereceipt').innerHTML = response;
				//note: auto add after filtering
				makeGetRequestAddReceipt(0, 'add');
			}
	}	
	
	
	//for search client by code
	function makeGetRequestReceiptByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getReceiptByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseReceiptByCode;
			http.send(null);
	}
		
	function processResponseReceiptByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddReceipt(response, 'edit');
				else
					//document.getElementById('searchreceipt').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateReceipt( action, f )
	{
		var strmessage = '';
		
		if (f.encounter.value == '' && f.node.value =='')
		{
			strmessage += "Please select an encounter or enter client information. ";
		}
		
		
			if ( (f.date.value!='') && isDate(java2mysql(f.date.value)) == false) 
			{
				f.date.focus();
				strmessage += "date must be a valid date. ";
			}	
		
			if (isNaN(f.encounter.value)) 
			{
				f.encounter.focus();
				strmessage += "encounter must be a number. ";
			}							
			
			
			if ( (f.birthday.value!='') && isDate(java2mysql(f.birthday.value)) == false) 
			{
				f.birthday.focus();
				strmessage += "birthday must be a valid date. ";
			}	
		
			if (isNaN(f.age.value)) 
			{
				f.age.focus();
				strmessage += "age must be a number. ";
			}							
			
			
			if (isNaN(f.paymenttype.value)) 
			{
				f.paymenttype.focus();
				strmessage += "paymenttype must be a number. ";
			}							
				
			
		if (strmessage!='') {
			alert(strmessage); 
			document.getElementById('savereceipt').disabled = false;
			return false;
		}
		else
		{
			
			if (paymenttype > 0 )
			{	
				makeGetRequestSaveReceiptByPaymenttype (action, f);				
			}
			else 
	
			if (encounter > 0 )
			{	
				makeGetRequestSaveReceiptByEncounter (action, f);				
			}
			else 
	
			if (user > 0 )
			{	
				makeGetRequestSaveReceiptByUser (action, f);				
			}
			else 
					
				makeGetRequestSaveReceipt ( action, f );
					
				
		}
	}
	
	receipt = 0;
	
	function makeGetRequestReceiptdetailByReceipt(wordId) {
		receipt = wordId;
		http.open('get', 'getReceiptdetailByReceipt.action?id=' + wordId);
		http.onreadystatechange = processResponseReceiptdetailByReceipt;
		http.send(null);
	}
	
	function processResponseReceiptdetailByReceipt() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divReceiptdetail').innerHTML = response;
			//makeGetRequestAddReceiptdetail(receipt, 'add');
			 if (document.getElementById('textservice') != null)
			 	document.getElementById('textservice').focus();
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveReceiptdetailByReceipt ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'receiptdetailAdd.action?'+url);
			else
				http.open('get', 'receiptdetailUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveReceiptdetailByReceipt;
			http.send(null);
			document.getElementById('addreceiptdetail').innerHTML ='';
	}
		

	function processResponseSaveReceiptdetailByReceipt (  ) {
			if(http.readyState == 4){
				makeGetRequestReceiptdetailByReceipt(receipt);
			}
	}	
	
	function setSubtotal()
	{
		document.getElementById("subtotal").value = $receiptdetail.subtotal - document.getElementById("discount").value;
	}
	
	function setDiscount()
	{
		document.getElementById("discount").value = $receiptdetail.subtotal * document.getElementById("percentdiscount").value/100;
	}
	
	
	
	function makeGetRequestAddReceiptdetail(wordId, action) {
		if (action == 'add')
			url = 'receiptdetailAddForm.action?id=' + wordId;
		else
			url = 'receiptdetailEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddReceiptdetail;
		http.send(null);
	}
	
	function processResponseAddReceiptdetail() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addreceiptdetail').innerHTML = response;
			if ((document.receiptdetailForm.service) != null)
				document.receiptdetailForm.service.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestReceiptdetailBySearch() {
			wordId = document.getElementById('searchreceiptdetail').value;
			con = document.getElementById('comboreceiptdetail').value;
			http.open('get', 'getReceiptdetailBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseReceiptdetailBySearch;
			http.send(null);
		}
		
	function processResponseReceiptdetailBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablereceiptdetail').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchreceiptdetail').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestReceiptdetailByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getReceiptdetailByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseReceiptdetailByCode;
			http.send(null);
	}
		
	function processResponseReceiptdetailByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddReceiptdetail(response, 'edit');
				else
					//document.getElementById('searchreceiptdetail').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateReceiptdetail( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.receipt.value)) 
			{
				f.receipt.focus();
				strmessage += "receipt must be a number. ";
			}							
			
			
			if (isNaN(f.service.value)) 
			{
				f.service.focus();
				strmessage += "service must be a number. ";
			}							
			
			
			if (isNaN(f.quantity.value)) 
			{
				f.quantity.focus();
				strmessage += "quantity must be a number. ";
			}							
			
			
			if (isNaN(f.price.value)) 
			{
				f.price.focus();
				strmessage += "price must be a number. ";
			}							
			
			
			if (isNaN(f.subtotal.value)) 
			{
				f.subtotal.focus();
				strmessage += "subtotal must be a number. ";
			}							
			
			
			
			
			if (isNaN(f.exedoctor.value)) 
			{
				f.exedoctor.focus();
				strmessage += "exedoctor must be a number. ";
			}							
			
			
			if (isNaN(f.inddoctor.value)) 
			{
				f.inddoctor.focus();
				strmessage += "inddoctor must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (service > 0 )
			{	
				makeGetRequestSaveReceiptdetailByService (action, f);				
			}
			else 			
	
			if (receipt > 0 )
			{	
				makeGetRequestSaveReceiptdetailByReceipt (action, f);				
			}
			else 
	
			if (doctor > 0 )
			{	
				makeGetRequestSaveReceiptdetailByDoctor (action, f);				
			}
			else 
					
				makeGetRequestSaveReceiptdetail ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddPrescriptiontemplate(wordId, action) {
		if (action == 'add')
			url = 'prescriptiontemplateAddForm.action?id=' + wordId;
		else
			url = 'prescriptiontemplateEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddPrescriptiontemplate;
		http.send(null);
	}
	
	function processResponseAddPrescriptiontemplate() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addprescriptiontemplate').innerHTML = response;
			if ((document.prescriptiontemplateForm.node) != null)
				document.prescriptiontemplateForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestPrescriptiontemplateBySearch() {
			wordId = document.getElementById('searchprescriptiontemplate').value;
			con = document.getElementById('comboprescriptiontemplate').value;
			http.open('get', 'getPrescriptiontemplateBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponsePrescriptiontemplateBySearch;
			http.send(null);
		}
		
	function processResponsePrescriptiontemplateBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableprescriptiontemplate').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchprescriptiontemplate').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestPrescriptiontemplateByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getPrescriptiontemplateByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponsePrescriptiontemplateByCode;
			http.send(null);
	}
		
	function processResponsePrescriptiontemplateByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddPrescriptiontemplate(response, 'edit');
				else
					//document.getElementById('searchprescriptiontemplate').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validatePrescriptiontemplate( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSavePrescriptiontemplate ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddPrescriptiontemplatedetail(wordId, action) {
		if (action == 'add')
			url = 'prescriptiontemplatedetailAddForm.action?id=' + wordId;
		else
			url = 'prescriptiontemplatedetailEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddPrescriptiontemplatedetail;
		http.send(null);
	}
	
	function processResponseAddPrescriptiontemplatedetail() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addprescriptiontemplatedetail').innerHTML = response;
			if ((document.prescriptiontemplatedetailForm.node) != null)
				document.prescriptiontemplatedetailForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestPrescriptiontemplatedetailBySearch() {
			wordId = document.getElementById('searchprescriptiontemplatedetail').value;
			con = document.getElementById('comboprescriptiontemplatedetail').value;
			http.open('get', 'getPrescriptiontemplatedetailBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponsePrescriptiontemplatedetailBySearch;
			http.send(null);
		}
		
	function processResponsePrescriptiontemplatedetailBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableprescriptiontemplatedetail').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchprescriptiontemplatedetail').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestPrescriptiontemplatedetailByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getPrescriptiontemplatedetailByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponsePrescriptiontemplatedetailByCode;
			http.send(null);
	}
		
	function processResponsePrescriptiontemplatedetailByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddPrescriptiontemplatedetail(response, 'edit');
				else
					//document.getElementById('searchprescriptiontemplatedetail').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validatePrescriptiontemplatedetail( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.prescriptiontemplate.value)) 
			{
				f.prescriptiontemplate.focus();
				strmessage += "prescriptiontemplate must be a number. ";
			}							
			
			
			if (isNaN(f.drug.value)) 
			{
				f.drug.focus();
				strmessage += "drug must be a number. ";
			}							
			
			
			if (isNaN(f.quantity.value)) 
			{
				f.quantity.focus();
				strmessage += "quantity must be a number. ";
			}							
			
			
			if (isNaN(f.timeuse.value)) 
			{
				f.timeuse.focus();
				strmessage += "timeuse must be a number. ";
			}							
			
			
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (drug > 0 )
			{	
				makeGetRequestSavePrescriptiontemplatedetailByDrug (action, f);				
			}
			else 
	
			if (prescriptiontemplate > 0 )
			{	
				makeGetRequestSavePrescriptiontemplatedetailByPrescriptiontemplate (action, f);				
			}
			else 
					
				makeGetRequestSavePrescriptiontemplatedetail ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddDepartment(wordId, action) {
		if (action == 'add')
			url = 'departmentAddForm.action?id=' + wordId;
		else
			url = 'departmentEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddDepartment;
		http.send(null);
	}
	
	function processResponseAddDepartment() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('adddepartment').innerHTML = response;
			if ((document.departmentForm.node) != null)
				document.departmentForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestDepartmentBySearch() {
			wordId = document.getElementById('searchdepartment').value;
			con = document.getElementById('combodepartment').value;
			http.open('get', 'getDepartmentBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseDepartmentBySearch;
			http.send(null);
		}
		
	function processResponseDepartmentBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tabledepartment').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchdepartment').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestDepartmentByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getDepartmentByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseDepartmentByCode;
			http.send(null);
	}
		
	function processResponseDepartmentByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddDepartment(response, 'edit');
				else
					//document.getElementById('searchdepartment').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateDepartment( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveDepartment ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddRoom(wordId, action) {
		if (action == 'add')
			url = 'roomAddForm.action?id=' + wordId;
		else
			url = 'roomEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddRoom;
		http.send(null);
	}
	
	function processResponseAddRoom() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addroom').innerHTML = response;
			if ((document.roomForm.node) != null)
				document.roomForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestRoomBySearch() {
			wordId = document.getElementById('searchroom').value;
			con = document.getElementById('comboroom').value;
			http.open('get', 'getRoomBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseRoomBySearch;
			http.send(null);
		}
		
	function processResponseRoomBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableroom').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchroom').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestRoomByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getRoomByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseRoomByCode;
			http.send(null);
	}
		
	function processResponseRoomByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddRoom(response, 'edit');
				else
					//document.getElementById('searchroom').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateRoom( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.department.value)) 
			{
				f.department.focus();
				strmessage += "department must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (department > 0 )
			{	
				makeGetRequestSaveRoomByDepartment (action, f);				
			}
			else 
	
			
			{	
				makeGetRequestSaveRoom ( action, f );				
			}
					
				
		}
	}
	
	
	function makeGetRequestAddDoctor(wordId, action) {
		if (action == 'add')
			url = 'doctorAddForm.action?id=' + wordId;
		else
			url = 'doctorEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddDoctor;
		http.send(null);
	}
	
	function processResponseAddDoctor() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('adddoctor').innerHTML = response;
			if ((document.doctorForm.node) != null)
				document.doctorForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestDoctorBySearch() {
			wordId = document.getElementById('searchdoctor').value;
			con = document.getElementById('combodoctor').value;
			http.open('get', 'getDoctorBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseDoctorBySearch;
			http.send(null);
		}
		
	function processResponseDoctorBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tabledoctor').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchdoctor').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestDoctorByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getDoctorByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseDoctorByCode;
			http.send(null);
	}
		
	function processResponseDoctorByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddDoctor(response, 'edit');
				else
					//document.getElementById('searchdoctor').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateDoctor( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveDoctor ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddImportinvoice(wordId, action) {

		if (action == 'add')
		{
		
			url = 'importinvoiceAddForm.action?id=' + wordId;
			importinvoiceaction = 'add';
		}
		else
		{
			url = 'importinvoiceEditForm.action?id=' + wordId;	
			importinvoiceaction = 'edit';
		}
		importinvoice = wordId;
		http.open('get', url);
		http.onreadystatechange = processResponseAddImportinvoice;
		http.send(null);
	}
	
	function processResponseAddImportinvoice() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addimportinvoice').innerHTML = response;

			document.getElementById('divImportinvoicedetail').innerHTML = '';
			//alert(importinvoice);
			if (importinvoice != 0)
			{
				makeGetRequestImportinvoicedetailByImportinvoice(importinvoice)
			}
					
		}
	}	
			
	
	//for search inline form
	function makeGetRequestImportinvoiceBySearch() {
			wordId = document.getElementById('searchimportinvoice').value;
			con = document.getElementById('comboimportinvoice').value;
			http.open('get', 'getImportinvoiceBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseImportinvoiceBySearch;
			http.send(null);
		}
		
	function processResponseImportinvoiceBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableimportinvoice').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchimportinvoice').value='';
	}		
	
	
	function makeGetRequestImportinvoiceByFilter() {
			type = document.getElementById('filtertype').value; 
			warehouse = document.getElementById('filterwarehouse').value; 
			date = document.getElementById('filterdate').value; 		

			http.open('get', 'getImportinvoiceBySearch.action?flag=filter&date='+date+'&type='+ type+'&warehouse='+ warehouse);
			
			
			http.onreadystatechange = processResponseImportinvoiceByFilter;
			http.send(null);
		}
		
	function processResponseImportinvoiceByFilter() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableimportinvoice').innerHTML = response;
				
				makeGetRequestAddImportinvoice(0, 'add');
			}
	}	
	
	
	//for search client by code
	function makeGetRequestImportinvoiceByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getImportinvoiceByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseImportinvoiceByCode;
			http.send(null);
	}
		
	function processResponseImportinvoiceByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddImportinvoice(response, 'edit');
				else
					//document.getElementById('searchimportinvoice').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateImportinvoice( action, f )
	{
		var strmessage = '';
		
			
			
			if ( (f.type.value == 'NB') && f.druginvoice.value == '') 
			{
				f.textdruginvoice.focus();
				strmessage += "you must select a drug invoice. ";
			}	
			
		
		
			if ( (f.date.value!='') && isDate(java2mysql(f.date.value)) == false) 
			{
				f.date.focus();
				strmessage += "date must be a valid date. ";
			}	
		
			if (isNaN(f.warehouse.value)) 
			{
				f.warehouse.focus();
				strmessage += "warehouse must be a number. ";
			}							
			
			
			if (isNaN(f.provider.value)) 
			{
				f.provider.focus();
				strmessage += "provider must be a number. ";
			}							
			
			
			if (isNaN(f.fromwarehouse.value)) 
			{
				f.fromwarehouse.focus();
				strmessage += "fromwarehouse must be a number. ";
			}							
			
			
			if (isNaN(f.vat.value)) 
			{
				f.vat.focus();
				strmessage += "vat must be a number. ";
			}							
			if (document.getElementById('warehouse').value == 0)  //Chua chon kho
			{
				f.warehouse.focus();
				strmessage += " -- Please select an warehouse where you are doing! ";
			}	
						
			
	
			
		if (strmessage!='') {
			alert(strmessage); 
				document.getElementById('saveimportinvoice').disabled = false;
			return false;
		}
		else
		{
			
			if (user > 0 )
			{	
				makeGetRequestSaveImportinvoiceByUser (action, f);				
			}
			else 
	
			if (provider > 0 )
			{	
				makeGetRequestSaveImportinvoiceByProvider (action, f);				
			}
			else 
	
			if (warehouse > 0 )
			{	
				makeGetRequestSaveImportinvoiceByWarehouse (action, f);				
			}
			else 
					
				makeGetRequestSaveImportinvoice ( action, f );
					
				
		}
	}
	
	importinvoice = 0;
	
	function makeGetRequestImportinvoicedetailByImportinvoice(wordId) {
		importinvoice = wordId;
		http.open('get', 'getImportinvoicedetailByImportinvoice.action?id=' + wordId);
		http.onreadystatechange = processResponseImportinvoicedetailByImportinvoice;
		http.send(null);
	}
	
	function processResponseImportinvoicedetailByImportinvoice() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divImportinvoicedetail').innerHTML = response;

			if ((document.inlineimportinvoicedetailForm.textdrug) != null)
				document.inlineimportinvoicedetailForm.textdrug.focus(); //can kiem tra focusfield truoc

		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveImportinvoicedetailByImportinvoice ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'importinvoicedetailAdd.action?'+url);
			else
				http.open('get', 'importinvoicedetailUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveImportinvoicedetailByImportinvoice;
			http.send(null);
			document.getElementById('addimportinvoicedetail').innerHTML ='';
	}
		

	function processResponseSaveImportinvoicedetailByImportinvoice (  ) {
			if(http.readyState == 4){
				makeGetRequestImportinvoicedetailByImportinvoice(importinvoice);
			}
	}	
	
	
	function makeGetRequestAddSerpackage(wordId, action) {
		if (action == 'add')
			url = 'serpackageAddForm.action?id=' + wordId;
		else
			url = 'serpackageEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddSerpackage;
		http.send(null);
	}
	
	function processResponseAddSerpackage() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addserpackage').innerHTML = response;
			if ((document.serpackageForm.node) != null)
				document.serpackageForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestSerpackageBySearch() {
			wordId = document.getElementById('searchserpackage').value;
			con = document.getElementById('comboserpackage').value;
			http.open('get', 'getSerpackageBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseSerpackageBySearch;
			http.send(null);
		}
		
	function processResponseSerpackageBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableserpackage').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchserpackage').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestSerpackageByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getSerpackageByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseSerpackageByCode;
			http.send(null);
	}
		
	function processResponseSerpackageByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddSerpackage(response, 'edit');
				else
					//document.getElementById('searchserpackage').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateSerpackage( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveSerpackage ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddOccupation(wordId, action) {
		if (action == 'add')
			url = 'occupationAddForm.action?id=' + wordId;
		else
			url = 'occupationEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddOccupation;
		http.send(null);
	}
	
	function processResponseAddOccupation() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addoccupation').innerHTML = response;
			if ((document.occupationForm.node) != null)
				document.occupationForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestOccupationBySearch() {
			wordId = document.getElementById('searchoccupation').value;
			con = document.getElementById('combooccupation').value;
			http.open('get', 'getOccupationBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseOccupationBySearch;
			http.send(null);
		}
		
	function processResponseOccupationBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableoccupation').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchoccupation').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestOccupationByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getOccupationByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseOccupationByCode;
			http.send(null);
	}
		
	function processResponseOccupationByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddOccupation(response, 'edit');
				else
					//document.getElementById('searchoccupation').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateOccupation( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveOccupation ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddPackagedetail(wordId, action) {
		if (action == 'add')
			url = 'packagedetailAddForm.action?id=' + wordId;
		else
			url = 'packagedetailEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddPackagedetail;
		http.send(null);
	}
	
	function processResponseAddPackagedetail() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addpackagedetail').innerHTML = response;
			if ((document.packagedetailForm.node) != null)
				document.packagedetailForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestPackagedetailBySearch() {
			wordId = document.getElementById('searchpackagedetail').value;
			con = document.getElementById('combopackagedetail').value;
			http.open('get', 'getPackagedetailBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponsePackagedetailBySearch;
			http.send(null);
		}
		
	function processResponsePackagedetailBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablepackagedetail').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchpackagedetail').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestPackagedetailByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getPackagedetailByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponsePackagedetailByCode;
			http.send(null);
	}
		
	function processResponsePackagedetailByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddPackagedetail(response, 'edit');
				else
					//document.getElementById('searchpackagedetail').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validatePackagedetail( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.serpackage.value)) 
			{
				f.serpackage.focus();
				strmessage += "serpackage must be a number. ";
			}							
			
			
			if (isNaN(f.service.value)) 
			{
				f.service.focus();
				strmessage += "service must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
				makeGetRequestSavePackagedetail ( action, f );
		}
	}
	
	
	function makeGetRequestAddCashadvance(wordId, action) {
		if (action == 'add')
			url = 'cashadvanceAddForm.action?id=' + wordId;
		else
			url = 'cashadvanceEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddCashadvance;
		http.send(null);
	}
	
	function processResponseAddCashadvance() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addcashadvance').innerHTML = response;
			if ((document.cashadvanceForm.node) != null)
				document.cashadvanceForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
	// add cardtype
	
	function makeGetRequestAddCardType(wordId, action) {
		if (action == 'add')
			url = 'CardTypeAddForm.action?id=' + wordId;
		else
			url = 'CardTypeEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddCardType;
		http.send(null);
	}
	
	function processResponseAddCardType() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addcardtype').innerHTML = response;
			if ((document.cardtypeForm.node) != null)
				document.cardtypeForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestCashadvanceBySearch() {
			wordId = document.getElementById('searchcashadvance').value;
			con = document.getElementById('combocashadvance').value;
			http.open('get', 'getCashadvanceBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseCashadvanceBySearch;
			http.send(null);
		}
		
	function processResponseCashadvanceBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablecashadvance').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchcashadvance').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestCashadvanceByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getCashadvanceByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseCashadvanceByCode;
			http.send(null);
	}
		
	function processResponseCashadvanceByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddCashadvance(response, 'edit');
				else
					//document.getElementById('searchcashadvance').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateCashadvance( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.encounter.value)) 
			{
				f.encounter.focus();
				strmessage += "encounter must be a number. ";
			}							
			
			
			
		
			if (isNaN(f.amount.value)) 
			{
				f.amount.focus();
				strmessage += "amount must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (encounter > 0 )
			{	
				makeGetRequestSaveCashadvanceByEncounter (action, f);				
			}
			else 
	
			
			{	
				makeGetRequestSaveCashadvance ( action, f );				
			}
					
				
		}
	}
	
	
	function makeGetRequestAddReport(wordId, action) {
		if (action == 'add')
			url = 'reportAddForm.action?id=' + wordId;
		else
			url = 'reportEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddReport;
		http.send(null);
	}
	
	function processResponseAddReport() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addreport').innerHTML = response;
			if ((document.reportForm.node) != null)
				document.reportForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestReportBySearch() {
			wordId = document.getElementById('searchreport').value;
			con = document.getElementById('comboreport').value;
			http.open('get', 'getReportBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseReportBySearch;
			http.send(null);
		}
		
	function processResponseReportBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablereport').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchreport').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestReportByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getReportByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseReportByCode;
			http.send(null);
	}
		
	function processResponseReportByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddReport(response, 'edit');
				else
					//document.getElementById('searchreport').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateReport( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveReport ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddProvince(wordId, action) {
		if (action == 'add')
			url = 'provinceAddForm.action?id=' + wordId;
		else
			url = 'provinceEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddProvince;
		http.send(null);
	}
	
	function processResponseAddProvince() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addprovince').innerHTML = response;
			if ((document.provinceForm.node) != null)
				document.provinceForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestProvinceBySearch() {
			wordId = document.getElementById('searchprovince').value;
			con = document.getElementById('comboprovince').value;
			http.open('get', 'getProvinceBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseProvinceBySearch;
			http.send(null);
		}
		
	function processResponseProvinceBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableprovince').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchprovince').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestProvinceByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getProvinceByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseProvinceByCode;
			http.send(null);
	}
		
	function processResponseProvinceByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddProvince(response, 'edit');
				else
					//document.getElementById('searchprovince').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateProvince( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveProvince ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddDistrict(wordId, action) {
		if (action == 'add')
			url = 'districtAddForm.action?id=' + wordId;
		else
			url = 'districtEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddDistrict;
		http.send(null);
	}
	
	function processResponseAddDistrict() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('adddistrict').innerHTML = response;
			if ((document.districtForm.node) != null)
				document.districtForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestDistrictBySearch() {
			wordId = document.getElementById('searchdistrict').value;
			con = document.getElementById('combodistrict').value;
			http.open('get', 'getDistrictBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseDistrictBySearch;
			http.send(null);
		}
		
	function processResponseDistrictBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tabledistrict').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchdistrict').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestDistrictByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getDistrictByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseDistrictByCode;
			http.send(null);
	}
		
	function processResponseDistrictByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddDistrict(response, 'edit');
				else
					//document.getElementById('searchdistrict').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateDistrict( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.province.value)) 
			{
				f.province.focus();
				strmessage += "province must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (province > 0 )
			{	
				makeGetRequestSaveDistrictByProvince (action, f);				
			}
			else 
	
			
			{	
				makeGetRequestSaveDistrict ( action, f );				
			}
					
				
		}
	}
	
	
	function makeGetRequestAddWard(wordId, action) {
		if (action == 'add')
			url = 'wardAddForm.action?id=' + wordId;
		else
			url = 'wardEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddWard;
		http.send(null);
	}
	
	function processResponseAddWard() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addward').innerHTML = response;
			if ((document.wardForm.node) != null)
				document.wardForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestWardBySearch() {
			wordId = document.getElementById('searchward').value;
			con = document.getElementById('comboward').value;
			http.open('get', 'getWardBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseWardBySearch;
			http.send(null);
		}
		
	function processResponseWardBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableward').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchward').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestWardByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getWardByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseWardByCode;
			http.send(null);
	}
		
	function processResponseWardByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddWard(response, 'edit');
				else
					//document.getElementById('searchward').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateWard( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.district.value)) 
			{
				f.district.focus();
				strmessage += "district must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (district > 0 )
			{	
				makeGetRequestSaveWardByDistrict (action, f);				
			}
			else 
	
			
			{	
				makeGetRequestSaveWard ( action, f );				
			}
					
				
		}
	}
	
	
	function makeGetRequestAddEthnic(wordId, action) {
		if (action == 'add')
			url = 'ethnicAddForm.action?id=' + wordId;
		else
			url = 'ethnicEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddEthnic;
		http.send(null);
	}
	
	function processResponseAddEthnic() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addethnic').innerHTML = response;
			if ((document.ethnicForm.node) != null)
				document.ethnicForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestEthnicBySearch() {
			wordId = document.getElementById('searchethnic').value;
			con = document.getElementById('comboethnic').value;
			http.open('get', 'getEthnicBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseEthnicBySearch;
			http.send(null);
		}
		
	function processResponseEthnicBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableethnic').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchethnic').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestEthnicByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getEthnicByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseEthnicByCode;
			http.send(null);
	}
		
	function processResponseEthnicByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddEthnic(response, 'edit');
				else
					//document.getElementById('searchethnic').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateEthnic( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveEthnic ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddImportinvoicedetail(wordId, action) {
		if (action == 'add')
			url = 'importinvoicedetailAddForm.action?id=' + wordId;
		else
			url = 'importinvoicedetailEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddImportinvoicedetail;
		http.send(null);
	}
	
	function processResponseAddImportinvoicedetail() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addimportinvoicedetail').innerHTML = response;
			if ((document.importinvoicedetailForm.node) != null)
				document.importinvoicedetailForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestImportinvoicedetailBySearch() {
			wordId = document.getElementById('searchimportinvoicedetail').value;
			con = document.getElementById('comboimportinvoicedetail').value;
			http.open('get', 'getImportinvoicedetailBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseImportinvoicedetailBySearch;
			http.send(null);
		}
		
	function processResponseImportinvoicedetailBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableimportinvoicedetail').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchimportinvoicedetail').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestImportinvoicedetailByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getImportinvoicedetailByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseImportinvoicedetailByCode;
			http.send(null);
	}
		
	function processResponseImportinvoicedetailByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddImportinvoicedetail(response, 'edit');
				else
					//document.getElementById('searchimportinvoicedetail').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateImportinvoicedetail( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.importinvoice.value)) 
			{
				f.importinvoice.focus();
				strmessage += "importinvoice must be a number. ";
			}							
			
			
			if (isNaN(f.drug.value)) 
			{
				f.drug.focus();
				strmessage += "drug must be a number. ";
			}							
			
			
			if (isNaN(f.quantity.value)) 
			{
				f.quantity.focus();
				strmessage += "quantity must be a number. ";
			}							

			if (f.batchnumber.value == '') 
			{
				f.batchnumber.focus();
				strmessage += "batchnumber must not be null. ";
			}							
			
			if (f.expireddate.value == ''&& f.expiredmonth.value == '') 
			{
				f.expireddate.focus();
				strmessage += "expireddate & expiredmonth must not be null. ";
			}		
			if (f.expireddate.value != ''&& f.expiredmonth.value != '') 
			{
				f.expireddate.focus();
				strmessage += "expireddate or expiredmonth ";
			}					
		
			
			if ( (f.expireddate.value!='') && isDate(java2mysql(f.expireddate.value)) == false) 
			{
				f.expireddate.focus();
				strmessage += "expireddate must be a valid date. ";
			}	
		
			if (isNaN(f.price.value)) 
			{
				f.price.focus();
				strmessage += "price must be a number. ";
			}							
			
			
			if (isNaN(f.discount.value)) 
			{
				f.discount.focus();
				strmessage += "discount must be a number. ";
			}							
			
			
			if (f.subtotal.value=='') 
			{
				f.subtotal.focus();
				strmessage += "subtotal can not be null. ";
			}	
		
			if (isNaN(f.subtotal.value)) 
			{
				f.subtotal.focus();
				strmessage += "subtotal must be a number. ";
			}							
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (drug > 0 )
			{	
				makeGetRequestSaveImportinvoicedetailByDrug (action, f);				
			}
			else 
	
			if (importinvoice > 0 )
			{	
				makeGetRequestSaveImportinvoicedetailByImportinvoice (action, f);				
			}
			else 
					
				makeGetRequestSaveImportinvoicedetail ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddDruginvoice(wordId, action) {
		druginvoice = wordId;
		if (action == 'add')
		{
			url = 'druginvoiceAddForm.action?id=' + wordId;
			druginvoiceaction = 'add';
		}
		else
		{
			url = 'druginvoiceEditForm.action?id=' + wordId;	
			druginvoiceaction = 'edit';
		}
		http.open('get', url);
		http.onreadystatechange = processResponseAddDruginvoice;
		http.send(null);
	}
	
	function processResponseAddDruginvoice() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('adddruginvoice').innerHTML = response;
			if ((document.druginvoiceForm.node) != null)
				document.druginvoiceForm.node.focus(); //can kiem tra focusfield truoc
				

			if (druginvoice > 0)
			makeGetRequestDruginvoicedetailByDruginvoice(druginvoice);	
		}
	}	
			
	
	//for search inline form
	function makeGetRequestDruginvoiceBySearch() {
			wordId = document.getElementById('searchdruginvoice').value;
			con = document.getElementById('combodruginvoice').value;
			http.open('get', 'getDruginvoiceBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseDruginvoiceBySearch;
			http.send(null);
		}
		
	function processResponseDruginvoiceBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tabledruginvoice').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchdruginvoice').value='';
	}		
	
	
	function makeGetRequestDruginvoiceByFilter() {
			warehouse = document.getElementById('filterwarehouse').value; 
		date = document.getElementById('filterdate').value; 
		type = document.getElementById('filtertype').value; 

			http.open('get', 'getDruginvoiceBySearch.action?flag=filter&warehouse='+ warehouse+'&date='+ date+'&type='+ type);
			http.onreadystatechange = processResponseDruginvoiceByFilter;
			http.send(null);
		}
		
	function processResponseDruginvoiceByFilter() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tabledruginvoice').innerHTML = response;
				
				makeGetRequestAddDruginvoice(0, 'add');
			}
	}	
	
	
	//for search client by code
	function makeGetRequestDruginvoiceByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getDruginvoiceByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseDruginvoiceByCode;
			http.send(null);
	}
		
	function processResponseDruginvoiceByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddDruginvoice(response, 'edit');
				else
					//document.getElementById('searchdruginvoice').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateDruginvoice( action, f )
	{
		var strmessage = '';
		
			if (isNaN(f.warehouse.value)) 
			{
				f.warehouse.focus();
				strmessage += "warehouse must be a number. ";
			}					
			
			
			if ( (f.date.value!='') && isDate(java2mysql(f.date.value)) == false) 
			{
				f.date.focus();
				strmessage += "date must be a valid date. ";
			}	
			
			if (f.type.value == 'NB' && f.towarehouse.value == '')
			{
				f.towarehouse.focus();
				strmessage += "Please select a warehouse to export to. ";				
			}
			
			if (f.type.value == 'HB' && f.encounter.value == '' && f.node.value == '' && f.provider.value =='')
			{				
				strmessage += "Please select an encounter or enter client name";				
			}
		
			if (isNaN(f.towarehouse.value)) 
			{
				f.towarehouse.focus();
				strmessage += "towarehouse must be a number. ";
			}							
			
			
			if (isNaN(f.encounter.value)) 
			{
				f.encounter.focus();
				strmessage += "encounter must be a number. ";
			}							
			
			
			if (isNaN(f.paymenttype.value)) 
			{
				f.paymenttype.focus();
				strmessage += "paymenttype must be a number. ";
			}							
			
		
			if (isNaN(f.vat.value)) 
			{
				f.vat.focus();
				strmessage += "vat must be a number. ";
			}	
			if (document.getElementById('warehouse').value == 0)  //Chua chon kho
			{
				f.warehouse.focus();
				strmessage += " -- Please select an warehouse where you are doing! ";
			}					
								
			
		if (strmessage!='') {
			alert(strmessage); 
			document.getElementById('savedruginvoice').disabled = false;
			return false;
		}
		else
		{
			makeGetRequestSaveDruginvoice ( action, f );
				
		}
	}
	
	druginvoice = 0;
	
	function makeGetRequestDruginvoicedetailByDruginvoice(wordId) {
		druginvoice = wordId;
		http.open('get', 'getDruginvoicedetailByDruginvoice.action?id=' + wordId);
		http.onreadystatechange = processResponseDruginvoicedetailByDruginvoice;
		http.send(null);
	}
	
	function processResponseDruginvoicedetailByDruginvoice() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divDruginvoicedetail').innerHTML = response;
			//makeGetRequestAddDruginvoicedetail(druginvoice, 'add');
			 document.getElementById('textdrug').focus();

			 
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveDruginvoicedetailByDruginvoice ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
				http.open('get', 'druginvoicedetailAdd.action?'+url);
			else
				http.open('get', 'druginvoicedetailUpdate.action?'+url);
			
			http.onreadystatechange = processResponseSaveDruginvoicedetailByDruginvoice;
			http.send(null);
			document.getElementById('adddruginvoicedetail').innerHTML ='';
	}
		

	function processResponseSaveDruginvoicedetailByDruginvoice (  ) {
			if(http.readyState == 4){
				makeGetRequestDruginvoicedetailByDruginvoice(druginvoice);
			}
	}	
	
	
	function makeGetRequestAddDruginvoicedetail(wordId, action) {
		if (action == 'add')
			url = 'druginvoicedetailAddForm.action?id=' + wordId;
		else
			url = 'druginvoicedetailEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddDruginvoicedetail;
		http.send(null);
	}
	
	function processResponseAddDruginvoicedetail() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('adddruginvoicedetail').innerHTML = response;
			if ((document.druginvoicedetailForm.node) != null)
				document.druginvoicedetailForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestDruginvoicedetailBySearch() {
			wordId = document.getElementById('searchdruginvoicedetail').value;
			con = document.getElementById('combodruginvoicedetail').value;
			http.open('get', 'getDruginvoicedetailBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseDruginvoicedetailBySearch;
			http.send(null);
		}
		
	function processResponseDruginvoicedetailBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tabledruginvoicedetail').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchdruginvoicedetail').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestDruginvoicedetailByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getDruginvoicedetailByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseDruginvoicedetailByCode;
			http.send(null);
	}
		
	function processResponseDruginvoicedetailByCode() {
			
			
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddDruginvoicedetail(response, 'edit');
				else
					//document.getElementById('searchdruginvoicedetail').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
			
	}		
	
	
	function validateDruginvoicedetail( action, f )
	{
		alert('test');
		var strmessage = '';
		
			if (f.druginvoice.value=='') 
			{
				f.druginvoice.focus();
				strmessage += "-- Druginvoice can not be null. ";
			}	
		
			if (isNaN(f.druginvoice.value)) 
			{
				f.druginvoice.focus();
				strmessage += "-- Druginvoice must be a number. ";
			}							
			
			
			if (isNaN(f.drug.value)) 
			{
				f.drug.focus();
				strmessage += "-- Drug must be a number. ";
			}							
			
			
			if (isNaN(f.quantity.value)) 
			{
				f.quantity.focus();
				strmessage += "-- Quantity must be a number. ";
			}							
			
			
			if ( (f.expireddate.value!='') && isDate(java2mysql(f.expireddate.value)) == false) 
			{
				f.expireddate.focus();
				strmessage += "-- Expireddate must be a valid date. ";
			}	
		
			if (isNaN(f.price.value)) 
			{
				f.price.focus();
				strmessage += "-- Price must be a number. ";
			}							
			
			/*
			if (isNaN(f.subtotal.value)) 
			{
				f.subtotal.focus();
				strmessage += "-- Subtotal must be a number. ";
			}	
			*/
			if (document.getElementById('textdrug').value =='')  //Chua chon kho
			{
				f.drug.focus();
				strmessage += " -- Please select an drug name ";
			}	
			if (document.getElementById('quantity').value =='')  //Chua chon kho
			{
				f.quantity.focus();
				strmessage += " -- Quantity can't null ";
			}	
			
			
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (drug > 0 )
			{	
				makeGetRequestSaveDruginvoicedetailByDrug (action, f);				
			}
			else 
	
			if (druginvoice > 0 )
			{	
				makeGetRequestSaveDruginvoicedetailByDruginvoice (action, f);				
			}
			else 
					
				makeGetRequestSaveDruginvoicedetail ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddProvider(wordId, action) {
		if (action == 'add')
			url = 'providerAddForm.action?id=' + wordId;
		else
			url = 'providerEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddProvider;
		http.send(null);
	}
	
	function processResponseAddProvider() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addprovider').innerHTML = response;
			if ((document.providerForm.node) != null)
				document.providerForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestProviderBySearch() {
			wordId = document.getElementById('searchprovider').value;
			con = document.getElementById('comboprovider').value;
			http.open('get', 'getProviderBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseProviderBySearch;
			http.send(null);
		}
		
	function processResponseProviderBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tableprovider').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchprovider').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestProviderByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getProviderByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseProviderByCode;
			http.send(null);
	}
		
	function processResponseProviderByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddProvider(response, 'edit');
				else
					//document.getElementById('searchprovider').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateProvider( action, f )
	{
		var strmessage = '';
		
			if (f.node.value=='') 
			{
				f.node.focus();
				strmessage += "node can not be null. ";
			}	
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveProvider ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddWarehouse(wordId, action) {
		if (action == 'add')
			url = 'warehouseAddForm.action?id=' + wordId;
		else
			url = 'warehouseEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddWarehouse;
		http.send(null);
	}
	
	function processResponseAddWarehouse() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addwarehouse').innerHTML = response;
			if ((document.warehouseForm.node) != null)
				document.warehouseForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestWarehouseBySearch() {
			wordId = document.getElementById('searchwarehouse').value;
			con = document.getElementById('combowarehouse').value;
			http.open('get', 'getWarehouseBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseWarehouseBySearch;
			http.send(null);
		}
		
	function processResponseWarehouseBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablewarehouse').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchwarehouse').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestWarehouseByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getWarehouseByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseWarehouseByCode;
			http.send(null);
	}
		
	function processResponseWarehouseByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddWarehouse(response, 'edit');
				else
					//document.getElementById('searchwarehouse').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateWarehouse( action, f )
	{
		var strmessage = '';
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveWarehouse ( action, f );
					
				
		}
	}
	
	warehouse = 0;
	
	function makeGetRequestImportinvoiceByWarehouse(wordId) {
		warehouse = wordId;
		http.open('get', 'getImportinvoiceByWarehouse.action?id=' + wordId);
		http.onreadystatechange = processResponseImportinvoiceByWarehouse;
		http.send(null);
	}
	
	function processResponseImportinvoiceByWarehouse() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divImportinvoice').innerHTML = response;
			//makeGetRequestAddImportinvoice(warehouse, 'add');
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveImportinvoiceByWarehouse ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action  == 'add')
			{
				http.open('get', 'importinvoiceAdd.action?'+url);
				
			}
			else
			{
				http.open('get', 'importinvoiceUpdate.action?'+url);
			
			}
			
			http.onreadystatechange = processResponseSaveImportinvoiceByWarehouse;
			http.send(null);
			document.getElementById('addimportinvoice').innerHTML ='';
	}
		

	function processResponseSaveImportinvoiceByWarehouse (  ) {
			if(http.readyState == 4){
				makeGetRequestImportinvoiceByWarehouse(warehouse);
			}
	}	
	
	
	function makeGetRequestAddHistory(wordId, action) {
		if (action == 'add')
			url = 'historyAddForm.action?id=' + wordId;
		else
			url = 'historyEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddHistory;
		http.send(null);
	}
	
	function processResponseAddHistory() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addhistory').innerHTML = response;
			if ((document.historyForm.node) != null)
				document.historyForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestHistoryBySearch() {
			wordId = document.getElementById('searchhistory').value;
			con = document.getElementById('combohistory').value;
			http.open('get', 'getHistoryBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseHistoryBySearch;
			http.send(null);
		}
		
	function processResponseHistoryBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablehistory').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchhistory').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestHistoryByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getHistoryByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseHistoryByCode;
			http.send(null);
	}
		
	function processResponseHistoryByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddHistory(response, 'edit');
				else
					//document.getElementById('searchhistory').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateHistory( action, f )
	{
		var strmessage = '';
		
			if (f.client.value=='') 
			{
				f.client.focus();
				strmessage += "client can not be null. ";
			}	
		
			if (isNaN(f.client.value)) 
			{
				f.client.focus();
				strmessage += "client must be a number. ";
			}							
			
			
			if ( (f.breastexamdate.value!='') && isDate(java2mysql(f.breastexamdate.value)) == false) 
			{
				f.breastexamdate.focus();
				strmessage += "breastexamdate must be a valid date. ";
			}	
		
			if ( (f.cadiacechodate.value!='') && isDate(java2mysql(f.cadiacechodate.value)) == false) 
			{
				f.cadiacechodate.focus();
				strmessage += "cadiacechodate must be a valid date. ";
			}	
		
			if ( (f.gynexamdate.value!='') && isDate(java2mysql(f.gynexamdate.value)) == false) 
			{
				f.gynexamdate.focus();
				strmessage += "gynexamdate must be a valid date. ";
			}	
		
			if ( (f.prostateexamdate.value!='') && isDate(java2mysql(f.prostateexamdate.value)) == false) 
			{
				f.prostateexamdate.focus();
				strmessage += "prostateexamdate must be a valid date. ";
			}	
		
			if ( (f.rectalexamdate.value!='') && isDate(java2mysql(f.rectalexamdate.value)) == false) 
			{
				f.rectalexamdate.focus();
				strmessage += "rectalexamdate must be a valid date. ";
			}	
		
			if ( (f.sigmoiddate.value!='') && isDate(java2mysql(f.sigmoiddate.value)) == false) 
			{
				f.sigmoiddate.focus();
				strmessage += "sigmoiddate must be a valid date. ";
			}	
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
			
			if (client > 0 )
			{	
				makeGetRequestSaveHistoryByClient (action, f);				
			}
			else 
	
			
			{	
				makeGetRequestSaveHistory ( action, f );				
			}
					
				
		}
	}
	
	
	function makeGetRequestAddSolving(wordId, action) {
		if (action == 'add')
			url = 'solvingAddForm.action?id=' + wordId;
		else
			url = 'solvingEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddSolving;
		http.send(null);
	}
	
	function processResponseAddSolving() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addsolving').innerHTML = response;
			if ((document.solvingForm.node) != null)
				document.solvingForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestSolvingBySearch() {
			wordId = document.getElementById('searchsolving').value;
			con = document.getElementById('combosolving').value;
			http.open('get', 'getSolvingBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseSolvingBySearch;
			http.send(null);
		}
		
	function processResponseSolvingBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablesolving').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchsolving').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestSolvingByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getSolvingByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseSolvingByCode;
			http.send(null);
	}
		
	function processResponseSolvingByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddSolving(response, 'edit');
				else
					//document.getElementById('searchsolving').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateSolving( action, f )
	{
		var strmessage = '';
		
			if (f.node.value=='') 
			{
				f.node.focus();
				strmessage += "node can not be null. ";
			}	
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveSolving ( action, f );
					
				
		}
	}
	
	
	function makeGetRequestAddHospital(wordId, action) {
		if (action == 'add')
			url = 'hospitalAddForm.action?id=' + wordId;
		else
			url = 'hospitalEditForm.action?id=' + wordId;	
		http.open('get', url);
		http.onreadystatechange = processResponseAddHospital;
		http.send(null);
	}
	
	function processResponseAddHospital() {
		if(http.readyState == 4){
			var response = http.responseText;			
			document.getElementById('addhospital').innerHTML = response;
			if ((document.hospitalForm.node) != null)
				document.hospitalForm.node.focus(); //can kiem tra focusfield truoc
		}
	}	
			
	
	//for search inline form
	function makeGetRequestHospitalBySearch() {
			wordId = document.getElementById('searchhospital').value;
			con = document.getElementById('combohospital').value;
			http.open('get', 'getHospitalBySearch.action?con=' + con + '&typehead=' + wordId);
			http.onreadystatechange = processResponseHospitalBySearch;
			http.send(null);
		}
		
	function processResponseHospitalBySearch() {
			if(http.readyState == 4){
				var response = http.responseText;
				document.getElementById('tablehospital').innerHTML = response;
			}
	}	
	function clearSearchBox() {
			document.getElementById('searchhospital').value='';
	}		
	
	
	
	//for search client by code
	function makeGetRequestHospitalByCode() {
			wordId = document.getElementById('code').value;
			http.open('get', 'getHospitalByCode.action?con=code&typehead=' + wordId);
			http.onreadystatechange = processResponseHospitalByCode;
			http.send(null);
	}
		
	function processResponseHospitalByCode() {
			if(http.readyState == 4)
			{
				var response = trim(http.responseText);
				//alert(response);
				if (response !=0)
					makeGetRequestAddHospital(response, 'edit');
				else
					//document.getElementById('searchhospital').innerHTML="i18n.get('notfound')";
					alert ('The record is not found');
			}
	}		
	
	
	function validateHospital( action, f )
	{
		var strmessage = '';
		
			if (f.node.value=='') 
			{
				f.node.focus();
				strmessage += "node can not be null. ";
			}	
		
		if (strmessage!='') {
			alert(strmessage); return false;
		}
		else
		{
							
				makeGetRequestSaveHospital ( action, f );
					
				
		}
	}
	
		
	function makeGetRequestPaymenttype() {
		http.open('get', 'paymenttypeList.action');
		http.onreadystatechange = processResponsePaymenttype;
		http.send(null);
	}
	
	function processResponsePaymenttype() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divPaymenttype').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddPaymenttype(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSavePaymenttype ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'paymenttypeAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddPaymenttype ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'paymenttypeUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdatePaymenttype ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddPaymenttype () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'paymenttypeView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddPaymenttype("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdatePaymenttype () {
			if(http.readyState == 4){
				makeGetRequestPaymenttype();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestClient() {
		http.open('get', 'clientList.action');
		http.onreadystatechange = processResponseClient;
		http.send(null);
			document.getElementById('addclient').innerHTML = '';
	}
	
	function processResponseClient() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divClient').innerHTML = response;

			//either keep the edit form or replace by the add form		
			makeGetRequestAddClient(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveClient ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
	     		
				if (isDate(java2mysql(value)))
				{
				da = value.split('/'); //ngay thang nam
				value = da[1] + '/' + da[0] + '/' + da[2] ;
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'clientAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddClient ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'clientUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateClient ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddClient () {
			if(http.readyState == 4){
				var response = http.responseText;
		
				//alert(response);
				var xmlDoc = loadXMLString(response);
			
				if (xmlDoc.getElementsByTagName('clientid') == null)
				{
					alert(response);
					return;
				}	
				
				clientid = xmlDoc.getElementsByTagName('clientid')[0].childNodes[0].nodeValue;
				encounterid = xmlDoc.getElementsByTagName('encounterid')[0].childNodes[0].nodeValue;

				if (clientid>0)
				{
				//window.open('clientView.action?id=' + clientid, 'View', 'width=500; height=500');
				}
				
				if (encounterid>0)
				{
				window.open('encounterView.action?id=' + encounterid, 'View', 'width=500; height=500');		
						
				}
				
				makeGetRequestClientByFilter();
			
			}
	}	

	function processResponseSaveUpdateClient () {
			if(http.readyState == 4){			
			
				var response = http.responseText;
				
				var xmlDoc = loadXMLString(response);
				
				if (xmlDoc.getElementsByTagName('clientid') == null)
				{
					alert(response);
					return;
				}	
			
				clientid = xmlDoc.getElementsByTagName('clientid')[0].childNodes[0].nodeValue;
				encounterid = xmlDoc.getElementsByTagName('encounterid')[0].childNodes[0].nodeValue;

				if (clientid>0)
				{
				//window.open('clientView.action?id=' + clientid, 'View', 'width=500; height=500');
				}
				
				if (encounterid>0)
				{
				window.open('encounterView.action?id=' + encounterid, 'View', 'width=500; height=500');			
				}
				
				makeGetRequestClientByFilter();
			}
	}	
	
	//from common.js
	
			
	function makeGetRequestService() {
		http.open('get', 'serviceList.action');
		http.onreadystatechange = processResponseService;
		http.send(null);
	}
	
	function processResponseService() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divService').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddService(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveService ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'serviceAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddService ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'serviceUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateService ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddService () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'serviceView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddService("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateService () {
			if(http.readyState == 4){
				//makeGetRequestService();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestEncounter() {
		http.open('get', 'encounterList.action');
		http.onreadystatechange = processResponseEncounter;
		http.send(null);
	}
	
	function processResponseEncounter() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divEncounter').innerHTML = response;

			//either keep the edit form or replace by the add form
			//makeGetRequestAddEncounter(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveEncounter ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'encounterAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddEncounter ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'encounterUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateEncounter ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddEncounter () {
			if(http.readyState == 4){
				/*var response = http.responseText;
				var viewurl = 'encounterView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddEncounter("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;		
			*/
				
				makeGetRequestEncounterByFilter();
			
			}
	}	

	function processResponseSaveUpdateEncounter () {
			if(http.readyState == 4){
				//makeGetRequestEncounter();		
				document.getElementById('msg').innerHTML ='Saved successfully';
				
				document.getElementById('addencounter').innerHTML ='';
				document.getElementById('divPrescriptiondetail').innerHTML ='';				
				document.getElementById('divIndicationdetail').innerHTML ='';		
				
				makeGetRequestEncounterByFilter();
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestIcd() {
		http.open('get', 'icdList.action');
		http.onreadystatechange = processResponseIcd;
		http.send(null);
	}
	
	function processResponseIcd() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divIcd').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddIcd(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveIcd ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'icdAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddIcd ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'icdUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateIcd ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddIcd () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'icdView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddIcd("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateIcd () {
			if(http.readyState == 4){
				makeGetRequestIcd();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestDrug() {
		http.open('get', 'drugList.action');
		http.onreadystatechange = processResponseDrug;
		http.send(null);
	}
	
	function processResponseDrug() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divDrug').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddDrug(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveDrug ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
				
			}

			if (action == 'add')
			{
					http.open('get', 'drugAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddDrug ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'drugUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateDrug ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddDrug () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'drugView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddDrug("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateDrug () {
			if(http.readyState == 4){
				makeGetRequestDrug();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestPrescriptiondetail() {
		http.open('get', 'prescriptiondetailList.action');
		http.onreadystatechange = processResponsePrescriptiondetail;
		http.send(null);
	}
	
	function processResponsePrescriptiondetail() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divPrescriptiondetail').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddPrescriptiondetail(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSavePrescriptiondetail ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'prescriptiondetailAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddPrescriptiondetail ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'prescriptiondetailUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdatePrescriptiondetail ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddPrescriptiondetail () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'prescriptiondetailView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddPrescriptiondetail("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdatePrescriptiondetail () {
			if(http.readyState == 4){
				makeGetRequestPrescriptiondetail();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestVitalsign() {
		http.open('get', 'vitalsignList.action');
		http.onreadystatechange = processResponseVitalsign;
		http.send(null);
	}
	
	function processResponseVitalsign() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divVitalsign').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddVitalsign(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveVitalsign ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'vitalsignAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddVitalsign ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'vitalsignUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateVitalsign ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddVitalsign () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'vitalsignView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddVitalsign("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateVitalsign () {
			if(http.readyState == 4){
				makeGetRequestVitalsign();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestUser() {
		http.open('get', 'userList.action');
		http.onreadystatechange = processResponseUser;
		http.send(null);
	}
	
	function processResponseUser() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divUser').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddUser(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveUser ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'userAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddUser ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'userUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateUser ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddUser () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'userView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddUser("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateUser () {
			if(http.readyState == 4){
				makeGetRequestUser();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestUserrole() {
		http.open('get', 'userroleList.action');
		http.onreadystatechange = processResponseUserrole;
		http.send(null);
	}
	
	function processResponseUserrole() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divUserrole').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddUserrole(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveUserrole ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'userroleAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddUserrole ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'userroleUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateUserrole ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddUserrole () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'userroleView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddUserrole("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateUserrole () {
			if(http.readyState == 4){
				makeGetRequestUserrole();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestRole() {
		http.open('get', 'roleList.action');
		http.onreadystatechange = processResponseRole;
		http.send(null);
	}
	
	function processResponseRole() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divRole').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddRole(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveRole ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'roleAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddRole ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'roleUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateRole ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddRole () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'roleView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddRole("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateRole () {
			if(http.readyState == 4){
				makeGetRequestRole();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestRoleform() {
		http.open('get', 'roleformList.action');
		http.onreadystatechange = processResponseRoleform;
		http.send(null);
	}
	
	function processResponseRoleform() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divRoleform').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddRoleform(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveRoleform ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'roleformAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddRoleform ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'roleformUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateRoleform ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddRoleform () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'roleformView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddRoleform("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateRoleform () {
			if(http.readyState == 4){
				makeGetRequestRoleform();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestServicegroup() {
		http.open('get', 'servicegroupList.action');
		http.onreadystatechange = processResponseServicegroup;
		http.send(null);
	}
	
	function processResponseServicegroup() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divServicegroup').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddServicegroup(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveServicegroup ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'servicegroupAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddServicegroup ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'servicegroupUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateServicegroup ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddServicegroup () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'servicegroupView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddServicegroup("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateServicegroup () {
			if(http.readyState == 4){
				makeGetRequestServicegroup();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestIndicationdetail() {
		http.open('get', 'indicationdetailList.action');
		http.onreadystatechange = processResponseIndicationdetail;
		http.send(null);
	}
	
	function processResponseIndicationdetail() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divIndicationdetail').innerHTML = response;
			
			document.getElementById('addindicationdetail').innerHTML = '';

			//either keep the edit form or replace by the add form
			//makeGetRequestAddIndicationdetail(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveIndicationdetail ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'indicationdetailAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddIndicationdetail ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'indicationdetailUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateIndicationdetail ; // no () here please, not know the reason
					
			}
			http.send(null);
			//document.getElementById('addindicationdetail').innerHTML ='';
	}
		

	function processResponseSaveAddIndicationdetail () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'indicationdetailView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddIndicationdetail("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
				//makeGetRequestIndicationdetail();	
						
			}
	}	

	function processResponseSaveUpdateIndicationdetail () {
			if(http.readyState == 4){
				//makeGetRequestIndicationdetail();		
				document.getElementById('msg').innerHTML ='Saved successfully';
				makeGetRequestIndicationdetailByFilter();
			}
	}	
	
	//from common.js
	
	function makeGetRequestReceipt() {
		http.open('get', 'receiptList.action');
		http.onreadystatechange = processResponseReceipt;
		http.send(null);
	}
	
	function processResponseReceipt() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divReceipt').innerHTML = response;
			//either keep the edit form or replace by the add form

		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveReceipt ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'receiptAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddReceipt ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'receiptUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateReceipt ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddReceipt () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'receiptView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddReceipt("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
				
				if (isNaN(response))				
					document.write(response);
				else
					makeGetRequestAddReceipt(response, 'edit');	
			}
	}	

	function processResponseSaveUpdateReceipt () {
			if(http.readyState == 4){
				document.getElementById('msg').innerHTML ='Saved successfully';
				makeGetRequestReceiptByFilter();	
			}
	}	
	
	//from common.js
		
	function makeGetRequestReceiptdetail() {
		http.open('get', 'receiptdetailList.action');
		http.onreadystatechange = processResponseReceiptdetail;
		http.send(null);
	}
	
	function processResponseReceiptdetail() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divReceiptdetail').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddReceiptdetail(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveReceiptdetail ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'receiptdetailAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddReceiptdetail ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'receiptdetailUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateReceiptdetail ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddReceiptdetail () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'receiptdetailView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddReceiptdetail("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateReceiptdetail () {
			if(http.readyState == 4){
				makeGetRequestReceiptdetail();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestPrescriptiontemplate() {
		http.open('get', 'prescriptiontemplateList.action');
		http.onreadystatechange = processResponsePrescriptiontemplate;
		http.send(null);
	}
	
	function processResponsePrescriptiontemplate() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divPrescriptiontemplate').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddPrescriptiontemplate(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSavePrescriptiontemplate ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'prescriptiontemplateAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddPrescriptiontemplate ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'prescriptiontemplateUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdatePrescriptiontemplate ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddPrescriptiontemplate () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'prescriptiontemplateView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddPrescriptiontemplate("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdatePrescriptiontemplate () {
			if(http.readyState == 4){
				makeGetRequestPrescriptiontemplate();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestPrescriptiontemplatedetail() {
		http.open('get', 'prescriptiontemplatedetailList.action');
		http.onreadystatechange = processResponsePrescriptiontemplatedetail;
		http.send(null);
	}
	
	function processResponsePrescriptiontemplatedetail() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divPrescriptiontemplatedetail').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddPrescriptiontemplatedetail(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSavePrescriptiontemplatedetail ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'prescriptiontemplatedetailAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddPrescriptiontemplatedetail ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'prescriptiontemplatedetailUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdatePrescriptiontemplatedetail ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddPrescriptiontemplatedetail () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'prescriptiontemplatedetailView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddPrescriptiontemplatedetail("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdatePrescriptiontemplatedetail () {
			if(http.readyState == 4){
				makeGetRequestPrescriptiontemplatedetail();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestDepartment() {
		http.open('get', 'departmentList.action');
		http.onreadystatechange = processResponseDepartment;
		http.send(null);
	}
	
	function processResponseDepartment() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divDepartment').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddDepartment(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveDepartment ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'departmentAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddDepartment ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'departmentUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateDepartment ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddDepartment () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'departmentView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddDepartment("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateDepartment () {
			if(http.readyState == 4){
				makeGetRequestDepartment();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestRoom() {
		http.open('get', 'roomList.action');
		http.onreadystatechange = processResponseRoom;
		http.send(null);
	}
	
	function processResponseRoom() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divRoom').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddRoom(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveRoom ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'roomAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddRoom ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'roomUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateRoom ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddRoom () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'roomView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddRoom("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateRoom () {
			if(http.readyState == 4){
				makeGetRequestRoom();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestDoctor() {
		http.open('get', 'doctorList.action');
		http.onreadystatechange = processResponseDoctor;
		http.send(null);
	}
	
	function processResponseDoctor() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divDoctor').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddDoctor(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveDoctor ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'doctorAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddDoctor ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'doctorUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateDoctor ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddDoctor () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'doctorView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddDoctor("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateDoctor () {
			if(http.readyState == 4){
				makeGetRequestDoctor();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestImportinvoice() {
		http.open('get', 'importinvoiceList.action');
		http.onreadystatechange = processResponseImportinvoice;
		http.send(null);
	}
	
	function processResponseImportinvoice() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divImportinvoice').innerHTML = response;

			//either keep the edit form or replace by the add form
			//makeGetRequestAddImportinvoice(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveImportinvoice ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'importinvoiceAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddImportinvoice ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'importinvoiceUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateImportinvoice ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddImportinvoice () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'importinvoiceView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddImportinvoice("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
				makeGetRequestAddImportinvoice(response, "edit");
			
			}
	}	

	function processResponseSaveUpdateImportinvoice () {
			if(http.readyState == 4){
				document.getElementById('msg').innerHTML ='Saved successfully';
				makeGetRequestImportinvoiceByFilter();		
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestSerpackage() {
		http.open('get', 'serpackageList.action');
		http.onreadystatechange = processResponseSerpackage;
		http.send(null);
	}
	
	function processResponseSerpackage() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divSerpackage').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddSerpackage(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveSerpackage ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'serpackageAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddSerpackage ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'serpackageUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateSerpackage ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddSerpackage () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'serpackageView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddSerpackage("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateSerpackage () {
			if(http.readyState == 4){
				makeGetRequestSerpackage();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	

	function makeGetRequestPackagedetailBySerpackage(wordId) {
		serpackage = wordId;
		//alert(wordId);
		
		http.open('get', 'getPackagedetailBySerpackage.action?id=' + wordId);
		http.onreadystatechange = processResponsePackagedetailBySerpackage;
		http.send(null);
	}
	
	function processResponsePackagedetailBySerpackage() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divPackagedetail').innerHTML = response;
  		 
		}
	}		
	

	//from common.js
	
	
	
		
	function makeGetRequestOccupation() {
		http.open('get', 'occupationList.action');
		http.onreadystatechange = processResponseOccupation;
		http.send(null);
	}
	
	function processResponseOccupation() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divOccupation').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddOccupation(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveOccupation ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'occupationAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddOccupation ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'occupationUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateOccupation ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddOccupation () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'occupationView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddOccupation("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateOccupation () {
			if(http.readyState == 4){
				makeGetRequestOccupation();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestPackagedetail() {
		http.open('get', 'packagedetailList.action');
		http.onreadystatechange = processResponsePackagedetail;
		http.send(null);
	}
	
	function processResponsePackagedetail() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divPackagedetail').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddPackagedetail(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSavePackagedetail ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'packagedetailAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddPackagedetail ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'packagedetailUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdatePackagedetail ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddPackagedetail () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'packagedetailView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddPackagedetail("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdatePackagedetail () {
			if(http.readyState == 4){
				makeGetRequestPackagedetail();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestCashadvance() {
		http.open('get', 'cashadvanceList.action');
		http.onreadystatechange = processResponseCashadvance;
		http.send(null);
	}
	
	function processResponseCashadvance() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divCashadvance').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddCashadvance(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveCashadvance ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'cashadvanceAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddCashadvance ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'cashadvanceUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateCashadvance ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddCashadvance () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'cashadvanceView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddCashadvance("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateCashadvance () {
			if(http.readyState == 4){
				makeGetRequestCashadvance();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestReport() {
		http.open('get', 'reportList.action');
		http.onreadystatechange = processResponseReport;
		http.send(null);
	}
	
	function processResponseReport() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divReport').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddReport(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveReport ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;

				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'reportAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddReport ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'reportUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateReport ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddReport () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'reportView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddReport("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateReport () {
			if(http.readyState == 4){
				makeGetRequestReport();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestProvince() {
		http.open('get', 'provinceList.action');
		http.onreadystatechange = processResponseProvince;
		http.send(null);
	}
	
	function processResponseProvince() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divProvince').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddProvince(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveProvince ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'provinceAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddProvince ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'provinceUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateProvince ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddProvince () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'provinceView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddProvince("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateProvince () {
			if(http.readyState == 4){
				makeGetRequestProvince();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestDistrict() {
		http.open('get', 'districtList.action');
		http.onreadystatechange = processResponseDistrict;
		http.send(null);
	}
	
	function processResponseDistrict() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divDistrict').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddDistrict(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveDistrict ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'districtAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddDistrict ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'districtUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateDistrict ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddDistrict () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'districtView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddDistrict("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateDistrict () {
			if(http.readyState == 4){
				makeGetRequestDistrict();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestWard() {
		http.open('get', 'wardList.action');
		http.onreadystatechange = processResponseWard;
		http.send(null);
	}
	
	function processResponseWard() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divWard').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddWard(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveWard ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'wardAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddWard ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'wardUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateWard ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddWard () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'wardView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddWard("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateWard () {
			if(http.readyState == 4){
				makeGetRequestWard();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestEthnic() {
		http.open('get', 'ethnicList.action');
		http.onreadystatechange = processResponseEthnic;
		http.send(null);
	}
	
	function processResponseEthnic() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divEthnic').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddEthnic(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveEthnic ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'ethnicAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddEthnic ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'ethnicUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateEthnic ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddEthnic () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'ethnicView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddEthnic("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateEthnic () {
			if(http.readyState == 4){
				makeGetRequestEthnic();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestImportinvoicedetail() {
		http.open('get', 'importinvoicedetailList.action');
		http.onreadystatechange = processResponseImportinvoicedetail;
		http.send(null);
	}
	
	function processResponseImportinvoicedetail() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divImportinvoicedetail').innerHTML = response;

		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveImportinvoicedetail ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'importinvoicedetailAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddImportinvoicedetail ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'importinvoicedetailUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateImportinvoicedetail ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddImportinvoicedetail () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'importinvoicedetailView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddImportinvoicedetail("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateImportinvoicedetail () {
			if(http.readyState == 4){
				makeGetRequestImportinvoicedetail();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestDruginvoice() {
		http.open('get', 'druginvoiceList.action');
		http.onreadystatechange = processResponseDruginvoice;
		http.send(null);
	}
	
	function processResponseDruginvoice() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divDruginvoice').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddDruginvoice(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveDruginvoice ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				 da = value.split('/'); //ngay thang nam
				 if (da[2] != null)
				 {
				 	  value = da[1] + '/' + da[0] + '/' + da[2] ;
				 }

				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{

					http.open('get', 'druginvoiceAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddDruginvoice ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'druginvoiceUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateDruginvoice ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddDruginvoice () {
			if(http.readyState == 4){
				var response = http.responseText;
	
				if (isNaN(response))
				{
					//document.getElementById('msg').innerHTML = response;
					//alert(document.getElementById('msg').innerHTML);
					alert(response);
				}
				else			
				{
					makeGetRequestAddDruginvoice(response, 'edit');
				}
			}
	}	

	function processResponseSaveUpdateDruginvoice () {
			if(http.readyState == 4){
				document.getElementById('msg').innerHTML ='Saved successfully';
				makeGetRequestDruginvoiceByFilter();		
			}
	}	
	
	//from common.js
	
	
	function makeGetRequestDruginvoicedetail() {
		http.open('get', 'druginvoicedetailList.action');
		http.onreadystatechange = processResponseDruginvoicedetail;
		http.send(null);
	}
	
	function processResponseDruginvoicedetail() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divDruginvoicedetail').innerHTML = response;

		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveDruginvoicedetail ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'druginvoicedetailAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddDruginvoicedetail ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'druginvoicedetailUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateDruginvoicedetail ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddDruginvoicedetail () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'druginvoicedetailView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddDruginvoicedetail("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateDruginvoicedetail () {
			if(http.readyState == 4){
				makeGetRequestDruginvoicedetail();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestProvider() {
		http.open('get', 'providerList.action');
		http.onreadystatechange = processResponseProvider;
		http.send(null);
	}
	
	function processResponseProvider() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divProvider').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddProvider(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveProvider ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'providerAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddProvider ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'providerUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateProvider ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddProvider () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'providerView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddProvider("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateProvider () {
			if(http.readyState == 4){
				makeGetRequestProvider();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestWarehouse() {
		http.open('get', 'warehouseList.action');
		http.onreadystatechange = processResponseWarehouse;
		http.send(null);
	}
	
	function processResponseWarehouse() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divWarehouse').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddWarehouse(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveWarehouse ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'warehouseAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddWarehouse ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'warehouseUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateWarehouse ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddWarehouse () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'warehouseView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddWarehouse("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateWarehouse () {
			if(http.readyState == 4){
				makeGetRequestWarehouse();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestHistory() {
		http.open('get', 'historyList.action');
		http.onreadystatechange = processResponseHistory;
		http.send(null);
	}
	
	function processResponseHistory() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divHistory').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddHistory(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveHistory ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'historyAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddHistory ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'historyUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateHistory ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddHistory () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'historyView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddHistory("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateHistory () {
			if(http.readyState == 4){
				makeGetRequestHistory();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestSolving() {
		http.open('get', 'solvingList.action');
		http.onreadystatechange = processResponseSolving;
		http.send(null);
	}
	
	function processResponseSolving() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divSolving').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddSolving(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveSolving ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'solvingAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddSolving ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'solvingUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateSolving ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddSolving () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'solvingView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddSolving("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateSolving () {
			if(http.readyState == 4){
				makeGetRequestSolving();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
	//from common.js
	
	
	
		
	function makeGetRequestHospital() {
		http.open('get', 'hospitalList.action');
		http.onreadystatechange = processResponseHospital;
		http.send(null);
	}
	
	function processResponseHospital() {
		if(http.readyState == 4){
			var response = http.responseText;
			document.getElementById('divHospital').innerHTML = response;

			//either keep the edit form or replace by the add form
			makeGetRequestAddHospital(0, 'add');	
		}
	}		
	
	//use ajax to save
	function makeGetRequestSaveHospital ( action, f ) {
				
			var url = '';
			var value = '';
			for (var i = 0; i<f.elements.length; i++) 
			{
				value = f.elements[i].value;
				if (value.indexOf('/')==2) 
				{
				  da = value.split('/'); //ngay thang nam
				  value = da[1] + '/' + da[0] + '/' + da[2] ;
				  
				}
				url=url+f.elements[i].name + '=' + value + '&';
			}
			
			if (action == 'add')
			{
					http.open('get', 'hospitalAdd.action?'+url);
					http.onreadystatechange = processResponseSaveAddHospital ; // no () here please, not know the reason
					for (var i = 0; i<f.elements.length; i++) 
					{
						if (f.elements[i].name.type == 'text')	f.elements[i].value = '';
					}
			}
			else
			{
					http.open('get', 'hospitalUpdate.action?'+url);
					http.onreadystatechange = processResponseSaveUpdateHospital ; // no () here please, not know the reason
					
			}
			http.send(null);
			document.getElementById('msg').innerHTML ='Saving...';
	}
		

	function processResponseSaveAddHospital () {
			if(http.readyState == 4){
				var response = http.responseText;
				var viewurl = 'hospitalView.action?id='+response;			
				var viewlink = "<input type='button' id='edit' value='View' onclick=window.open('"+viewurl+"')  >";				
			
				var action = 'edit';				
				var url = "<input type='button' id='edit' value='Edit' onclick='makeGetRequestAddHospital("+response+","+action+")' >";
			
				document.getElementById('msg').innerHTML ='Saved successfully: ' + viewlink + url;
			
			}
	}	

	function processResponseSaveUpdateHospital () {
			if(http.readyState == 4){
				makeGetRequestHospital();		
				document.getElementById('msg').innerHTML ='Saved successfully';
			}
	}	
	
//***********************from common.js******************************//
function loadXMLString(text)
{
var xmlDoc;
try //Internet Explorer
  {
  xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
  xmlDoc.async="false";
  xmlDoc.loadXML(text);
  }
catch(e)
  {
  try // Firefox, Mozilla, Opera, etc.
    {
    parser=new DOMParser();
    xmlDoc=parser.parseFromString(text,"text/xml");
    }
  catch(e)
    {
    alert(e.message);
    return;
    }
	
	return xmlDoc;
  }
}
	
	
	
function createRequestObject() {
    var tmpXmlHttpObject;
    if (window.XMLHttpRequest) { 
        tmpXmlHttpObject = new XMLHttpRequest();
    } else if (window.ActiveXObject) { 
        tmpXmlHttpObject = new ActiveXObject('Microsoft.XMLHTTP');
    }
 
    return tmpXmlHttpObject;
}
var http = createRequestObject();

//smart date
function getSmartDate(txtDate)
{

	var rawText = txtDate.value;
	if (rawText=='') return 0;
	
	var currentTime = new Date();
	var currentDate = currentTime.getDate();
	var currentMonth = currentTime.getMonth();
	
	var currentYear = currentTime.getFullYear();
	var smartDate;
	switch(rawText.length)
	{
	case 1:
		smartDate =  currentYear+'-'+currentMonth+'-'+rawText;
		break;
	case 2:
		smartDate =   currentYear+'-'+currentMonth+'-'+rawText;
		break;
	
	case 3: 
		if ( rawText.substr(0,2)<=31 ) 
			smartDate =   currentYear+'-'+rawText.substr(2,1)+'-'+rawText.substr(0,2);
		else if( rawText.substr(1,2)<=12 ) //get the firswt letter to make date
			smartDate =   currentYear+'-'+rawText.substr(1,2)+'-'+rawText.substr(0,1);
		else
			smartDate = rawText;		
		break;
	case 4: 
		smartDate =  currentYear+'-'+rawText.substr(2,2)+'-'+rawText.substr(0,2);	
		break;
	case 5: 
		smartDate =  rawText;	
		break;
	case 6: 
		if ( rawText.substr(4,2)>=20 )
		smartDate = '19'+rawText.substr(4,2)+'-'+rawText.substr(2,2)+'-'+rawText.substr(0,2);
		else
		smartDate = '20'+rawText.substr(4,2)+'-'+rawText.substr(2,2)+'-'+rawText.substr(0,2);
		break;
	case 7: 
		smartDate =  rawText;	
		break;	
	case 8: 
		smartDate =  rawText.substr(4,4)+'-'+rawText.substr(2,2)+'-'+rawText.substr(0,2);	
		break;
	case 9: 
		smartDate =  rawText;	
		break;
	case 10: 
		smartDate =  rawText;	
		break;			
	}
	
	
	if (isDate(smartDate)==false)
	{
		//alert('Can not be a date');
		txtDate.focus();
	}
	else
		txtDate.value = mysql2java(smartDate);	

}

function mysql2java(mysqldate)
{
	da = mysqldate.split('-');	
	return (da[2]+'/'+da[1]+'/'+da[0]); // ngay /thang/ nam

}
function java2mysql(javadate)
{
	da = javadate.split('/');	
	//alert(javadate);
	return (da[2]+'-'+da[1]+'-'+da[0]); // ngay /thang/ nam
	
}

/**
 * DHTML date validation script. Courtesy of SmartWebby.com (http://www.smartwebby.com/dhtml/)
 */
// Declaring valid date character, minimum year and maximum year
var dtCh= '-';
var minYear=1900;
var maxYear=2100;

function isInteger(s){
	var i;
    for (i = 0; i < s.length; i++){   
        // Check that current character is number.
        var c = s.charAt(i);
        if (((c < '0') || (c > '9'))) return false;
    }
    // All characters are numbers.
    return true;
}

function stripCharsInBag(s, bag){
	var i;
    var returnString = '';
    // Search through string's characters one by one.
    // If character is not in bag, append to returnString.
    for (i = 0; i < s.length; i++){   
        var c = s.charAt(i);
        if (bag.indexOf(c) == -1) returnString += c;
    }
    return returnString;
}

function daysInFebruary (year){
	// February has 29 days in any year evenly divisible by four,
    // EXCEPT for centurial years which are not also divisible by 400.
    return (((year % 4 == 0) && ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );
}
function DaysArray(n) {
	for (var i = 1; i <= n; i++) {
		this[i] = 31
		if (i==4 || i==6 || i==9 || i==11) {this[i] = 30}
		if (i==2) {this[i] = 29}
   } 
   return this
}

function isDate(dtStr){
	var daysInMonth = DaysArray(12)
	var pos1=dtStr.indexOf(dtCh)
	var pos2=dtStr.indexOf(dtCh,pos1+1)
	var strYear=dtStr.substring(0,pos1)
	var strMonth=dtStr.substring(pos1+1,pos2)
	var strDay=dtStr.substring(pos2+1)
	
	strYr=strYear
	if (strDay.charAt(0)=='0' && strDay.length>1) strDay=strDay.substring(1)
	if (strMonth.charAt(0)=='0' && strMonth.length>1) strMonth=strMonth.substring(1)
	for (var i = 1; i <= 3; i++) {
		if (strYr.charAt(0)=='0' && strYr.length>1) strYr=strYr.substring(1)
	}
	month=parseInt(strMonth)
	day=parseInt(strDay)
	year=parseInt(strYr)
	if (pos1==-1 || pos2==-1){
		//alert('The date format should be : dd/mm/yyyy')
		return false
	}
	if (strMonth.length<1 || month<1 || month>12){
		//alert('Please enter a valid month')
		return false
	}
	if (strDay.length<1 || day<1 || day>31 || (month==2 && day>daysInFebruary(year)) || day > daysInMonth[month]){
		//alert('Please enter a valid day')
		return false
	}
	if (strYear.length != 4 || year==0 || year<minYear || year>maxYear){
		//alert('Please enter a valid 4 digit year between '+minYear+' and '+maxYear)
		return false
	}
	if (dtStr.indexOf(dtCh,pos2+1)!=-1 || isInteger(stripCharsInBag(dtStr, dtCh))==false){
		//alert('Please enter a valid date')
		return false
	}
return true
}

//trim
function ltrim(str) { 
	for(var k = 0; k < str.length && isWhitespace(str.charAt(k)); k++);
	return str.substring(k, str.length);
}
function rtrim(str) {
	for(var j=str.length-1; j>=0 && isWhitespace(str.charAt(j)) ; j--) ;
	return str.substring(0,j+1);
}
function trim(str) {
	return ltrim(rtrim(str));
}
function isWhitespace(charToCheck) {
	var whitespaceChars = ' ';
	return (whitespaceChars.indexOf(charToCheck) != -1);
}



<!-- Original:  Ronnie T. Moore -->
<!-- Web Site:  The JavaScript Source -->

<!-- This script and many more are available free online at -->
<!-- The JavaScript Source!! http://javascript.internet.com -->

<!-- Begin

nextfield = ''; // name of first box on page
netscape = '';
typehead = '';
formname = '';

ver = navigator.appVersion; len = ver.length;
for(iln = 0; iln < len; iln++) if (ver.charAt(iln) == '(') break;
netscape = (ver.charAt(iln+1).toUpperCase() != 'C');

function keyDown(DnEvents) 
{ // handles keypress
// determines whether Netscape or Internet Explorer
	k = (netscape) ? DnEvents.which : window.event.keyCode;
	if (k == 13) 
	{ // enter key pressed
		if (nextfield != '') 
		{ // we're not done yet, send focus to next box
			//if (document.getElementById(nextfield) != null)	document.getElementById(nextfield).focus();
			var str = 'document.'+formname + '.' + nextfield;
			if (eval(str) != null)	eval(str).focus();
		}
		
		//alert(typehead);
		if (typehead == '')
		{	
			return true; // submit, we finished all fields
		}
		else 
		{ // we're not done yet, send focus to next box
		
			typehead_id = document.getElementById('cbo'+typehead).value;
			typehead_node = document.getElementById('cbo'+typehead).options[document.getElementById('cbo'+typehead).selectedIndex].text;
			
			eval('select'+typehead)(typehead_id, typehead_node);
			
			return true;
		  }
	 }
}
document.onkeydown = keyDown; // work together to analyze keystrokes
if (netscape) document.captureEvents(Event.KEYDOWN|Event.KEYUP);
//  End -->


//this script to collapse all popup form

var onpopup = 0;
document.onclick = collapse;

function collapse()
{
	if (onpopup != 1)
	{
		if (document.getElementById('divward') != null) document.getElementById('divward').style.display = 'none';
		if (document.getElementById('divicd') != null) document.getElementById('divicd').style.display = 'none';
		if (document.getElementById('divprescriptiontemplate') != null) document.getElementById('divprescriptiontemplate').style.display = 'none';
		if (document.getElementById('divencounter' ) != null)document.getElementById('divencounter').style.display = 'none';
		if (document.getElementById('divward' ) != null) document.getElementById('divward' ).style.display = 'none';
		if (document.getElementById('divprovince' ) != null) document.getElementById('divprovince' ).style.display = 'none';
		if (document.getElementById('divclient' ) != null) document.getElementById('divclient' ).style.display = 'none';
		if (document.getElementById('divdruginvoice' ) != null) document.getElementById('divdruginvoice' ).style.display = 'none';
		if (document.getElementById('divicd' ) != null) document.getElementById('divicd' ).style.display = 'none';
		if (document.getElementById('divprovider' ) != null) document.getElementById('divprovider' ).style.display = 'none';
		if (document.getElementById('divimportinvoice' ) != null) document.getElementById('divimportinvoice' ).style.display = 'none';
		if (document.getElementById('divdrug' ) != null) document.getElementById('divdrug' ).style.display = 'none';
		if (document.getElementById('divservice' ) != null) document.getElementById('divservice' ).style.display = 'none';
		if (document.getElementById('divserpackage' ) != null) document.getElementById('divserpackage' ).style.display = 'none';
		if (document.getElementById('divreceipt' ) != null) document.getElementById('divreceipt' ).style.display = 'none';
		if (document.getElementById('divdepartment' ) != null) document.getElementById('divdepartment' ).style.display = 'none';
		if (document.getElementById('divservicegroup' ) != null) document.getElementById('divservicegroup' ).style.display = 'none';
		if (document.getElementById('divdistrict' ) != null) document.getElementById('divdistrict' ).style.display = 'none';
		if (document.getElementById('divdepartment' ) != null) document.getElementById('divdepartment' ).style.display = 'none';
		if (document.getElementById('divdepartment' ) != null) document.getElementById('divdepartment' ).style.display = 'none';


	}
	onpopup = 0;
}

function formatDate(str)
{
var strsplit = str.split(" ");
return strsplit[0];

}

</script>